{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/pure/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"source/images/gangji.jpeg","path":"images/gangji.jpeg","modified":0,"renderable":0},{"_id":"themes/pure/source/fonts/README.md","path":"fonts/README.md","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.eot","path":"fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.ttf","path":"fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.woff","path":"fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/pure/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/pure/source/images/gangji.jpeg","path":"images/gangji.jpeg","modified":0,"renderable":1},{"_id":"themes/pure/source/images/thumb-default.png","path":"images/thumb-default.png","modified":0,"renderable":1},{"_id":"themes/pure/source/js/application.min.js","path":"js/application.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/images/xingqiu-qrcode.jpg","path":"images/xingqiu-qrcode.jpg","modified":0,"renderable":1},{"_id":"themes/pure/source/js/application.js","path":"js/application.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/insight.js","path":"js/insight.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.js","path":"js/plugin.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.min.js","path":"js/plugin.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/pure/source/css/style.min.css","path":"css/style.min.css","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.svg","path":"fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/alipayimg.png","path":"images/donate/alipayimg.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","path":"images/donate/wechatpayimg.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","path":"images/favatar/SzsFox-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","path":"images/favatar/chuangzaoshi-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","path":"images/favatar/idesign-logo.png","modified":0,"renderable":1},{"_id":"source/images/splitter.gif","path":"images/splitter.gif","modified":0,"renderable":0},{"_id":"themes/pure/source/js/plugin.js.map","path":"js/plugin.js.map","modified":0,"renderable":1},{"_id":"source/images/macnotes.gif","path":"images/macnotes.gif","modified":0,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"a47f4187d4ce73a2b4b1c91577f271c506799804","modified":1541680723000},{"_id":"themes/pure/.gitignore","hash":"dbb41a2f30c98cb9de173d82736c46266c901cda","modified":1541250703000},{"_id":"themes/pure/.DS_Store","hash":"d9e7026d154500f304a9c843b349333533cfab42","modified":1541680696000},{"_id":"themes/pure/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1541250703000},{"_id":"themes/pure/_config.yml","hash":"5f6c0698826ab00efeea9ebf46fb843fe8fb84ef","modified":1541730234000},{"_id":"themes/pure/README.cn.md","hash":"a634af4addbb57088935e060e8ec6035ea7bab76","modified":1541250703000},{"_id":"themes/pure/README.md","hash":"5861cec81712af9197a210fd5212d007aad8b0de","modified":1541250703000},{"_id":"themes/pure/_config.yml.example","hash":"4714f87fdb6d4a6ea5ece84f4fe37f922337f14d","modified":1541250703000},{"_id":"themes/pure/package.json","hash":"a61723eead5cae2c4d9f0f05cf40d2de7c286fee","modified":1541250703000},{"_id":"source/_posts/angular-splitter.md","hash":"dfebd0cf2221512a4c9527b09e46ca23bc525628","modified":1541300301000},{"_id":"source/_posts/.DS_Store","hash":"bc71cd365aea9120efe05aaa4e396a484dc0f3c1","modified":1541309199000},{"_id":"source/_posts/Hexo-Github搭建静态博客-一.md","hash":"6d73d9e6e5efc5312cf61d42a82f3f2e6a42de57","modified":1541470081000},{"_id":"source/about/index.md","hash":"d33ce407c4b95e23a524e7528d99666858a29020","modified":1541312198000},{"_id":"source/images/.DS_Store","hash":"83e94de090c98e8d7e81c22ba56ec96a090f3e60","modified":1541310207000},{"_id":"source/_posts/如何使用GZIP来优化你的网站.md","hash":"62918bf2fece7c8806538d8f95c9bd3278db4f72","modified":1541300867000},{"_id":"source/repository/index.ejs","hash":"a9a9d73456d65611ab87ef4fd135e28da59d7cd3","modified":1541344334000},{"_id":"themes/pure/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1541250703000},{"_id":"themes/pure/.git/config","hash":"7ec6421043b0f1135362e6c04e1f42251478e733","modified":1541250703000},{"_id":"themes/pure/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1541250668000},{"_id":"themes/pure/.git/index","hash":"8dd9c6c79504e6f087dfa35883842853d19e1f86","modified":1541678650000},{"_id":"themes/pure/.git/packed-refs","hash":"3ddfd0f92192a4a6b3591f5b058d8797c32dedf2","modified":1541250703000},{"_id":"themes/pure/languages/default.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1541250703000},{"_id":"themes/pure/languages/en.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1541250703000},{"_id":"themes/pure/languages/zh-CN.yml","hash":"057ebc043f09449af9768791c89c86dfc2938365","modified":1541250703000},{"_id":"themes/pure/languages/zh-TW.yml","hash":"6d27c3114be539b8783ffce944f68b2e26a8c3b9","modified":1541250703000},{"_id":"themes/pure/layout/about.ejs","hash":"4f5c769e183249b12eb9d3141432bc0039519730","modified":1541250703000},{"_id":"themes/pure/layout/archive.ejs","hash":"ded5d953b35666e30f4c6e48e2d2c62af8d95ebf","modified":1541250703000},{"_id":"themes/pure/layout/index.ejs","hash":"07825d8d8b21eb7b694f5585567b9df5c5a91a60","modified":1541250703000},{"_id":"themes/pure/layout/books.ejs","hash":"6c64719cd7071b5319b01339aa524fdaab391385","modified":1541250703000},{"_id":"themes/pure/layout/category.ejs","hash":"68632e8ac45088a929ca82b6cca8ba60323d6aac","modified":1541250703000},{"_id":"themes/pure/layout/categories.ejs","hash":"2084974ba68f799216a8b216752f7fc87c693cc0","modified":1541250703000},{"_id":"themes/pure/layout/layout.ejs","hash":"a29ab2e881954a252bfc0dc1a7eb5aa52768dd2a","modified":1541250703000},{"_id":"themes/pure/layout/links.ejs","hash":"77c5d1561e2c606c5b3bb39610133d84324074df","modified":1541250703000},{"_id":"themes/pure/layout/post.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1541250703000},{"_id":"themes/pure/layout/page.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1541250703000},{"_id":"themes/pure/layout/repository.ejs","hash":"fe4b3e051a8b0debe9ee22c2cc2cc935d92ee23f","modified":1541250703000},{"_id":"themes/pure/layout/tag.ejs","hash":"6e4e6660cf58beb3e5e2e52b59c51393e4796c36","modified":1541250703000},{"_id":"themes/pure/layout/tags.ejs","hash":"4c0b797a45cf238be367932927edc88599aa3255","modified":1541250703000},{"_id":"themes/pure/scripts/thumbnail.js","hash":"e667a611f9baac270281b765832020d50bf8fb7f","modified":1541250703000},{"_id":"themes/pure/source/favicon.png","hash":"89875d3b018552e396fc5f0bd8ff5d9f5d4a5d71","modified":1541250703000},{"_id":"themes/pure/source/.DS_Store","hash":"1ec4eb17b8df08cd33c828beaf51ef1d0642c0e9","modified":1541310255000},{"_id":"source/images/gangji.jpeg","hash":"aa669322366eb2b78e04391d6cbdff101ca2d162","modified":1541309829000},{"_id":"themes/pure/screenshot/pure-theme-black.png","hash":"10b40f398af7eb7e8ba2bf2f2a959d8779fc1fe1","modified":1541250703000},{"_id":"themes/pure/screenshot/pure-theme-purple.png","hash":"9855d2eb0acd23370209354f232471df8f4f72e2","modified":1541250703000},{"_id":"themes/pure/screenshot/pure-theme-blue.png","hash":"6146890a68d5ea9d343c48d50151ddd5a2a1872c","modified":1541250703000},{"_id":"themes/pure/screenshot/pure-theme-green.png","hash":"12ec0c6033cb2762839fdf75434bbb4fbf946022","modified":1541250703000},{"_id":"themes/pure/screenshot/pure.png","hash":"8f4cfd8d7edfa4fbffdf375291302d9807f5cc1c","modified":1541250703000},{"_id":"themes/pure/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1541250668000},{"_id":"themes/pure/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1541250668000},{"_id":"themes/pure/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1541250668000},{"_id":"themes/pure/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1541250668000},{"_id":"themes/pure/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1541250668000},{"_id":"themes/pure/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1541250668000},{"_id":"themes/pure/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1541250668000},{"_id":"themes/pure/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1541250668000},{"_id":"themes/pure/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1541250668000},{"_id":"themes/pure/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1541250668000},{"_id":"themes/pure/.git/logs/HEAD","hash":"ba24b9f0e26dc84e585c6e39ce2cb20d5fb1f306","modified":1541250703000},{"_id":"themes/pure/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1541250668000},{"_id":"themes/pure/_source/404/index.md","hash":"8d493f624fdd29c8d0266767e56f343d549e16d8","modified":1541250703000},{"_id":"themes/pure/_source/_data/gallery.yml","hash":"e2b3fad87be3d1cfde1effa655d39678ee90907e","modified":1541250703000},{"_id":"themes/pure/_source/_data/links.yml","hash":"aa443a4508550820c77c2a4f6abff1d38ad85054","modified":1541250703000},{"_id":"themes/pure/_source/about/index.md","hash":"9c95cabb533409d06daefc4295021ad199761efc","modified":1541250703000},{"_id":"themes/pure/_source/books/index.md","hash":"cf4163959c23244059cbbbc1c0fe379cc3b2cb73","modified":1541250703000},{"_id":"themes/pure/_source/categories/index.md","hash":"5d2a4f103d27bebbe3eef1604649d0f5c6d86ac6","modified":1541250703000},{"_id":"themes/pure/_source/links/index.md","hash":"febcf87eb0ab3c5080578275d25f3970bba39625","modified":1541250703000},{"_id":"themes/pure/_source/repository/index.md","hash":"ed0e082c30f233dd5c140d188f1e4bce44bdbf79","modified":1541250703000},{"_id":"themes/pure/_source/tags/index.md","hash":"42e9c904ea63b0a7dd4033e2e8f153225bc5cda5","modified":1541250703000},{"_id":"themes/pure/layout/_common/footer.ejs","hash":"cdc48ec70d9202b947f2a9334234d038d7014a7d","modified":1541250703000},{"_id":"themes/pure/layout/_common/head.ejs","hash":"a48ef0fa22712b29ec044b9e5134461f3a21c10d","modified":1541250703000},{"_id":"themes/pure/layout/_common/header.ejs","hash":"3d739d1e2b2991927c08ec222db123830a44a519","modified":1541250703000},{"_id":"themes/pure/layout/_common/script.ejs","hash":"0031114d2a58f8601c2869f78ceedc75a10be90d","modified":1541250703000},{"_id":"themes/pure/layout/_common/social.ejs","hash":"a35a2610e9da762df96587b76b51470507a88cad","modified":1541250703000},{"_id":"themes/pure/layout/_partial/archive-book.ejs","hash":"977f97f3636947006ad738e502858c46d4cd5ec7","modified":1541250703000},{"_id":"themes/pure/layout/_partial/archive-category.ejs","hash":"9c364fd6b5172890784141802f5f466241d233fd","modified":1541250703000},{"_id":"themes/pure/layout/_partial/archive-list.ejs","hash":"c66c86d6a6a90e00494c380603426fc0f4006311","modified":1541250703000},{"_id":"themes/pure/layout/_partial/archive-link.ejs","hash":"fe4d9bf526d8176683cea89b8561ced571374db0","modified":1541250703000},{"_id":"themes/pure/layout/_partial/archive-post.ejs","hash":"13039fec017332029122ef99901755fcecbfc8ea","modified":1541250703000},{"_id":"themes/pure/layout/_partial/archive-repository.ejs","hash":"e39dc762d9fe238cede462532e40eaa3d8651122","modified":1541250703000},{"_id":"themes/pure/layout/_partial/archive-tag.ejs","hash":"5de90244c3cedad531cccc03c40e5f9a3aef3c61","modified":1541250703000},{"_id":"themes/pure/layout/_partial/archive.ejs","hash":"4d6793f50d41fbd47dc50aa36b24d496006bba6c","modified":1541250703000},{"_id":"themes/pure/layout/_partial/article-about.ejs","hash":"7b80319daeb63401d1745b81cd9a6d1d21a4fb60","modified":1541250703000},{"_id":"themes/pure/layout/_partial/article.ejs","hash":"0f9b71de0087d1f777d92c5a0f3873971aec5a5b","modified":1541250703000},{"_id":"themes/pure/layout/_partial/item-post.ejs","hash":"9f755b0da1ea928dece32c2050d8a04b3a9fb13b","modified":1541250703000},{"_id":"themes/pure/layout/_partial/pagination.ejs","hash":"41a319642da5af07d6cfb8525796aa610b721879","modified":1541250703000},{"_id":"themes/pure/layout/_partial/sidebar-about.ejs","hash":"e10ea0176ba87e64888234bafedc01c92544352c","modified":1541250703000},{"_id":"themes/pure/layout/_partial/sidebar-toc.ejs","hash":"152538ceceb0fdef65c46470ebf0189f7b891c5b","modified":1541250703000},{"_id":"themes/pure/layout/_partial/sidebar.ejs","hash":"2aa8a9f90838e7c105e75e6d3d03cbf860bb1239","modified":1541250703000},{"_id":"themes/pure/layout/_script/analytics.ejs","hash":"e756a81f8c20a187fb863b9689f2f1fa15e2f4e1","modified":1541250703000},{"_id":"themes/pure/layout/_script/fancybox.ejs","hash":"8f1be01e70a15b2c31ae57d8c6bce54622ebf8a7","modified":1541250703000},{"_id":"themes/pure/layout/_script/douban.ejs","hash":"143087db0573772b0bdaf7f93312553158942ec7","modified":1541250703000},{"_id":"themes/pure/layout/_script/comment.ejs","hash":"6f951510bab9dc15474b6664e0329defccf29a30","modified":1541250703000},{"_id":"themes/pure/layout/_script/pv.ejs","hash":"fb9b5f16029f2ccef4b83cf4facfdcdd748b65b4","modified":1541250703000},{"_id":"themes/pure/layout/_script/mathjax.ejs","hash":"f618393ab971b2faa80d541f2e6a553d9ace9816","modified":1541250703000},{"_id":"themes/pure/layout/_script/repository.ejs","hash":"234e6a9d8b129dc19e916cb9f927a27b04758180","modified":1541250703000},{"_id":"themes/pure/layout/_script/search.ejs","hash":"7be33dc260ce788aa1a2cd3bd0386d95057533cb","modified":1541250703000},{"_id":"themes/pure/layout/_search/baidu.ejs","hash":"67aab280a3ea34429f086cc5c3de7de17727c567","modified":1541250703000},{"_id":"themes/pure/layout/_search/index-mobile.ejs","hash":"c726e234c0166da69fdfbd3dd613a5eaf4c80258","modified":1541250703000},{"_id":"themes/pure/layout/_search/index.ejs","hash":"f8d5a9c3f777250f5fb6512bba585307f784d5cd","modified":1541250703000},{"_id":"themes/pure/layout/_search/insight.ejs","hash":"4af3e92ef98bedba9680d45699cb04dde4640536","modified":1541250703000},{"_id":"themes/pure/layout/_search/swiftype.ejs","hash":"4baeca36e410181300ae7d47ba1fb4755bcfcff0","modified":1541250703000},{"_id":"themes/pure/layout/_widget/archive.ejs","hash":"af8ad7f62877764b75d5272d9d899fd6c8e3845c","modified":1541250703000},{"_id":"themes/pure/layout/_widget/category.ejs","hash":"331b7642a0f58b9088b937436ab39076a4c5dd7e","modified":1541250703000},{"_id":"themes/pure/layout/_widget/board.ejs","hash":"acd27451be52703e670ce0b313f2da6fa24071e4","modified":1541250703000},{"_id":"themes/pure/layout/_widget/recent_posts.ejs","hash":"8942d60311797a591ba2d157c5cdd23e85ceb694","modified":1541250703000},{"_id":"themes/pure/layout/_widget/tagcloud.ejs","hash":"3291108e5411c48b2c5b3e17adace6ffa90d1c29","modified":1541250703000},{"_id":"themes/pure/layout/_widget/tag.ejs","hash":"487628925da5fcac91463cdad3d9e55d071bd5ed","modified":1541250703000},{"_id":"themes/pure/source/fonts/README.md","hash":"c5772b99ad81291fb137b330813f866bdceea0a3","modified":1541250703000},{"_id":"themes/pure/source/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1541250703000},{"_id":"themes/pure/source/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1541250703000},{"_id":"themes/pure/source/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1541250703000},{"_id":"themes/pure/source/images/.DS_Store","hash":"fee9f5830be7051250155772d56a05e2c970bdff","modified":1541342238000},{"_id":"themes/pure/source/images/avatar.jpg","hash":"f86eafc318f3900319b25057811720168f24d248","modified":1541250703000},{"_id":"themes/pure/source/images/gangji.jpeg","hash":"924ec9cd8227444336ec57b4c97d5e049152ff3d","modified":1541310497000},{"_id":"themes/pure/source/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1541250703000},{"_id":"themes/pure/source/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1541250703000},{"_id":"themes/pure/source/images/xingqiu-qrcode.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1541250703000},{"_id":"themes/pure/source/js/application.js","hash":"46d1fb207ce5f0acb83803f927985dfcea86f9ef","modified":1541250703000},{"_id":"themes/pure/source/js/insight.js","hash":"298e8ca42517984bd26f34caa4c45560b0e909ad","modified":1541250703000},{"_id":"themes/pure/source/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1541250703000},{"_id":"themes/pure/source/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1541250703000},{"_id":"themes/pure/source/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1541250703000},{"_id":"themes/pure/.git/refs/heads/master","hash":"acadee1d4d226b371a3bf4ad2be7e333316f601e","modified":1541250703000},{"_id":"themes/pure/layout/_partial/post/comment.ejs","hash":"3c0da69fcea6ccfd97b82d50e740107a88eec5c4","modified":1541250703000},{"_id":"themes/pure/layout/_partial/post/date.ejs","hash":"7d4979652998abf92a64bfae8157b70d6e514057","modified":1541250703000},{"_id":"themes/pure/layout/_partial/post/category.ejs","hash":"fcee6b4aef8b6c4627831ff8dbb2d73478511426","modified":1541250703000},{"_id":"themes/pure/layout/_partial/post/copyright.ejs","hash":"a9d3d05428e5844a07706c7fcfeb842e44a36a64","modified":1541250703000},{"_id":"themes/pure/layout/_partial/post/donate.ejs","hash":"a251dc34d660601a2e8b7d98b3bfe2b9023dbbce","modified":1541250703000},{"_id":"themes/pure/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1541250703000},{"_id":"themes/pure/layout/_partial/post/nav.ejs","hash":"95eabc0fe4033ec61b240a16eeaf7dc62a9e3da1","modified":1541250703000},{"_id":"themes/pure/layout/_partial/post/pv.ejs","hash":"ec3ccf322432afc2761f860c5a3000ac34d46e4c","modified":1541250703000},{"_id":"themes/pure/layout/_partial/post/tag.ejs","hash":"39f53ead07f75c181a7ba93e586dd1b8171620f1","modified":1541250703000},{"_id":"themes/pure/layout/_partial/post/thumbnail.ejs","hash":"080d5c5f3e95accf51893a7092695fe32d34a087","modified":1541250703000},{"_id":"themes/pure/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1541250703000},{"_id":"themes/pure/layout/_partial/post/wordcount.ejs","hash":"bd06c4c8449ed96aabf655fe1ae3be1f0707b81e","modified":1541250703000},{"_id":"themes/pure/layout/_script/_analytics/google-analytics.ejs","hash":"54f1dc9375cbdb65464e0ac1b58847aa5e8bc6a5","modified":1541250703000},{"_id":"themes/pure/layout/_script/_analytics/tencent-analytics.ejs","hash":"77defb41a1613a758ff5a6a5128c6107fc584190","modified":1541250703000},{"_id":"themes/pure/layout/_script/_analytics/baidu-analytics.ejs","hash":"f314be7860c1d5930f1600d010e3120ba5c85325","modified":1541250703000},{"_id":"themes/pure/layout/_script/_comment/disqus.ejs","hash":"a051e3eddc75586e69131c29ab8c89d69626e0fd","modified":1541250703000},{"_id":"themes/pure/layout/_script/_comment/gitalk.ejs","hash":"fb01f1631c3ae7fe6211dc03233506cb344229be","modified":1541250703000},{"_id":"themes/pure/layout/_script/_comment/gitment.ejs","hash":"a64852076483395738a398deb4c10bdb0f3b7b71","modified":1541250703000},{"_id":"themes/pure/layout/_script/_comment/livere.ejs","hash":"5ab997d5ee4475d2f89f882fab4a52648dbe0e30","modified":1541250703000},{"_id":"themes/pure/layout/_script/_comment/valine.ejs","hash":"acf81f9a59dc45f197d723f70484de5fcd166577","modified":1541250703000},{"_id":"themes/pure/layout/_script/_comment/youyan.ejs","hash":"095649a173573d03b5845c2e331ec7be976b152a","modified":1541250703000},{"_id":"themes/pure/layout/_script/_search/baidu.ejs","hash":"9b60ffa2e2725a993e9cecfb81ddedd9b9361011","modified":1541250703000},{"_id":"themes/pure/layout/_script/_search/insight.ejs","hash":"3543c11d060feaf9381b5d87564b01ffef0e0a59","modified":1541250703000},{"_id":"themes/pure/source/css/style.css","hash":"3b693ce41c2e35ece4773593e94b4c17aeaee02f","modified":1541250703000},{"_id":"themes/pure/source/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1541250703000},{"_id":"themes/pure/source/fonts/iconfont.svg","hash":"25929e6e74f7027acd1f6467a67e95b153bcd8d5","modified":1541250703000},{"_id":"themes/pure/source/images/donate/alipayimg.png","hash":"9562f23f2eb57841c65dc769b6cc43a2cf0efa94","modified":1541250703000},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","hash":"c0844d9a633696cb00ae64fde06f0f924f63b596","modified":1541250703000},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1541250703000},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1541250703000},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1541250703000},{"_id":"source/images/splitter.gif","hash":"0b87f964aea00ddcdab43b30eb5344c6b439e1df","modified":1541300185000},{"_id":"themes/pure/source/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1541250703000},{"_id":"themes/pure/.git/objects/pack/pack-a8bbf079d9e5a98a3c3a4f24d030ed3082380192.idx","hash":"f266e38ee1ed76e6ba3dbc113ba0c21a660ea0c0","modified":1541250703000},{"_id":"themes/pure/.git/logs/refs/heads/master","hash":"ba24b9f0e26dc84e585c6e39ce2cb20d5fb1f306","modified":1541250703000},{"_id":"themes/pure/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1541250703000},{"_id":"themes/pure/.git/logs/refs/remotes/origin/HEAD","hash":"ba24b9f0e26dc84e585c6e39ce2cb20d5fb1f306","modified":1541250703000},{"_id":"source/images/macnotes.gif","hash":"b9a7377686ba07b39d4711dd8927bc8b2eb595eb","modified":1541300181000},{"_id":"themes/pure/screenshot/pure.psd","hash":"a31cea40b45bdc31f051fca2f1e2f4ecbaee1a94","modified":1541250703000},{"_id":"themes/pure/.git/objects/pack/pack-a8bbf079d9e5a98a3c3a4f24d030ed3082380192.pack","hash":"b09df110abc679521487510282785b20e0073c50","modified":1541250703000},{"_id":"source/repository/index.html","hash":"6c9c128888c7eb5ebf72bfc5d306d95f00dc0b7c","modified":1541678489000},{"_id":"source/repository/index.md","hash":"ed0e082c30f233dd5c140d188f1e4bce44bdbf79","modified":1541250703000}],"Category":[],"Data":[],"Page":[{"title":"关于Damon Du","date":"2018-11-04T06:09:51.000Z","_content":"```\n{\n    name: '杜宽'\n    age: 28,\n    gender: '男',\n    profession: '菜鸡前端',\n    experience: '0.5年',\n    address: '北京市',\n    education: '本科',\n    github: 'https://github.com/guguji5',\n    blog: 'https://guguji5.github.io/',\n    email: 'guguji5@163.com',\n    description: '致力于网站建设与精研前端开发',\n}\n```\n","source":"about/index.md","raw":"---\ntitle: 关于Damon Du\ndate: 2018-11-04 14:09:51\n---\n```\n{\n    name: '杜宽'\n    age: 28,\n    gender: '男',\n    profession: '菜鸡前端',\n    experience: '0.5年',\n    address: '北京市',\n    education: '本科',\n    github: 'https://github.com/guguji5',\n    blog: 'https://guguji5.github.io/',\n    email: 'guguji5@163.com',\n    description: '致力于网站建设与精研前端开发',\n}\n```\n","updated":"2018-11-04T06:16:38.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjo8j4rp80001xhs6uyxvfkl0","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    name: &apos;杜宽&apos;</span><br><span class=\"line\">    age: 28,</span><br><span class=\"line\">    gender: &apos;男&apos;,</span><br><span class=\"line\">    profession: &apos;菜鸡前端&apos;,</span><br><span class=\"line\">    experience: &apos;0.5年&apos;,</span><br><span class=\"line\">    address: &apos;北京市&apos;,</span><br><span class=\"line\">    education: &apos;本科&apos;,</span><br><span class=\"line\">    github: &apos;https://github.com/guguji5&apos;,</span><br><span class=\"line\">    blog: &apos;https://guguji5.github.io/&apos;,</span><br><span class=\"line\">    email: &apos;guguji5@163.com&apos;,</span><br><span class=\"line\">    description: &apos;致力于网站建设与精研前端开发&apos;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    name: &apos;杜宽&apos;</span><br><span class=\"line\">    age: 28,</span><br><span class=\"line\">    gender: &apos;男&apos;,</span><br><span class=\"line\">    profession: &apos;菜鸡前端&apos;,</span><br><span class=\"line\">    experience: &apos;0.5年&apos;,</span><br><span class=\"line\">    address: &apos;北京市&apos;,</span><br><span class=\"line\">    education: &apos;本科&apos;,</span><br><span class=\"line\">    github: &apos;https://github.com/guguji5&apos;,</span><br><span class=\"line\">    blog: &apos;https://guguji5.github.io/&apos;,</span><br><span class=\"line\">    email: &apos;guguji5@163.com&apos;,</span><br><span class=\"line\">    description: &apos;致力于网站建设与精研前端开发&apos;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"Repositories","layout":"repository","comments":0,"sidebar":"none","_content":"","source":"repository/index.md","raw":"---\ntitle: Repositories\nlayout: repository\ncomments: false\nsidebar: none\n---\n","date":"2018-11-09T02:23:03.000Z","updated":"2018-11-09T02:23:03.000Z","path":"repository/index.html","_id":"cjo9ecg6x0001vks6bpy4cjmw","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"angular splitter","date":"2018-11-03T10:43:35.000Z","_content":"> this is a angular splitter that could drag the responsive layout, and also act like the layout of notes on mac.\n\n![drawing](/images/splitter.gif)\n![drawing](/images/macnotes.gif)\n\n## Online \n\n[http://angular-splitter.guguji5.top](http://angular-splitter.guguji5.top)\n\n## How to run\n```\ngit clone https://github.com/guguji5/angular-splitter.git\ncd angular-splitter\nnpm install\nng serve --open\n```\nof course you must have angular-cli installed.\n\n## Angular Support\n\nangular 5~6\n\n## Document\n\n**Component `<tam-splitter>`**\n\n@Input    | Type|Default|Details\n-------- | ---|---|---\ndirection | string|\"horizontal\"|Select split direction: \"horizontal\" or \"vertical\".\nsplitterBarWidth    | number|8|Gutters's size (dragging elements) in pixels.\nuseTransition| boolean or number| false|Use transition when collapsing or expanding. when this param is a number, it will be a millisecond value set to the property 'transition-duration', should be between 100 and 1000\ntype | string| 'standard' | it has two value(standard, macNotes), which controls the behavior of the drag, macNotes type will act like the notes on mac\n\n@Output|Param|Details\n-------- | ---|---\nsizeChange|{barNum: number, sizes: Array`<number>`}|Emit when draging, return the index of bar and the sizes of panels\n\n**Component `<tam-splitter-panel>`**\n\n@Input    | Type|Default|Details\n-------- | ---|---|---\nsize | number|null|Size of the panel in percent (value between 0 and 100).all panels sizes should be equal to 100\nmax|number|null|Max size of the panel in percent (value between 0 and 100).\nmin|number|null|Min size of the panel in percent (value between 0 and 100).\nvisible|boolean|true|Allow to toggle panel visibility\n\n@Output|Param|Details\n-------- | ---|---\ncollapsedChange|{collapsed:boolean, sizes:  Array`<number>`, collapsedComponentSize: number}|Emit when collapsed or expand, return the collapsed, the sizes of panels and the size of collapsed panel\n\nsimple demo:\n```\n<tam-splitter splitterBarWidth=3 [direction]=\"horizontal\" (sizeChange)=\"sizeChange($event)\">\n    <tam-splitter-panel [size]=\"20\" [max]=\"30\" [min]=\"10\"\n        [visible]=true (collapsedChange)=\"collapsedChange($event)\">\n        Refined By Panel\n    </tam-splitter-panel>\n    <tam-splitter-panel  [size]=\"30\" [max]=\"50\" [min]=\"20\">\n        Side List Panel\n    </tam-splitter-panel>\n    <tam-splitter-panel [size]=\"50\" [max]=\"70\" [min]=\"20\">\n        Preview Panel\n    </tam-splitter-panel>\n</tam-splitter>\n```\n\nnested demo:\n```\n<tam-splitter splitterBarWidth=3>\n    <tam-splitter-panel [size]=\"20\" [max]=\"30\" [min]=\"10\" (collapsedChange)=\"collapsedChange($event)\">\n        Refined By Panel\n    </tam-splitter-panel>\n    <tam-splitter-panel [size]=\"80\">\n        <tam-splitter splitterBarWidth=3 [direction]=\"'vertical'\">\n            <tam-splitter-panel [size]=\"30\" [max]=\"40\" [min]=\"20\">\n                Side List Panel\n            </tam-splitter-panel>\n\n            <tam-splitter-panel [size]=\"70\" [max]=\"80\" [min]=\"60\">\n                Preview Panel\n            </tam-splitter-panel>\n        </tam-splitter>\n    </tam-splitter-panel>\n</tam-splitter>\n```\n[中文README](https://blog.csdn.net/baidu_35407267/article/details/82527822)\n","source":"_posts/angular-splitter.md","raw":"---\ntitle: angular splitter\ndate: 2018-11-03 18:43:35\ntags:\n---\n> this is a angular splitter that could drag the responsive layout, and also act like the layout of notes on mac.\n\n![drawing](/images/splitter.gif)\n![drawing](/images/macnotes.gif)\n\n## Online \n\n[http://angular-splitter.guguji5.top](http://angular-splitter.guguji5.top)\n\n## How to run\n```\ngit clone https://github.com/guguji5/angular-splitter.git\ncd angular-splitter\nnpm install\nng serve --open\n```\nof course you must have angular-cli installed.\n\n## Angular Support\n\nangular 5~6\n\n## Document\n\n**Component `<tam-splitter>`**\n\n@Input    | Type|Default|Details\n-------- | ---|---|---\ndirection | string|\"horizontal\"|Select split direction: \"horizontal\" or \"vertical\".\nsplitterBarWidth    | number|8|Gutters's size (dragging elements) in pixels.\nuseTransition| boolean or number| false|Use transition when collapsing or expanding. when this param is a number, it will be a millisecond value set to the property 'transition-duration', should be between 100 and 1000\ntype | string| 'standard' | it has two value(standard, macNotes), which controls the behavior of the drag, macNotes type will act like the notes on mac\n\n@Output|Param|Details\n-------- | ---|---\nsizeChange|{barNum: number, sizes: Array`<number>`}|Emit when draging, return the index of bar and the sizes of panels\n\n**Component `<tam-splitter-panel>`**\n\n@Input    | Type|Default|Details\n-------- | ---|---|---\nsize | number|null|Size of the panel in percent (value between 0 and 100).all panels sizes should be equal to 100\nmax|number|null|Max size of the panel in percent (value between 0 and 100).\nmin|number|null|Min size of the panel in percent (value between 0 and 100).\nvisible|boolean|true|Allow to toggle panel visibility\n\n@Output|Param|Details\n-------- | ---|---\ncollapsedChange|{collapsed:boolean, sizes:  Array`<number>`, collapsedComponentSize: number}|Emit when collapsed or expand, return the collapsed, the sizes of panels and the size of collapsed panel\n\nsimple demo:\n```\n<tam-splitter splitterBarWidth=3 [direction]=\"horizontal\" (sizeChange)=\"sizeChange($event)\">\n    <tam-splitter-panel [size]=\"20\" [max]=\"30\" [min]=\"10\"\n        [visible]=true (collapsedChange)=\"collapsedChange($event)\">\n        Refined By Panel\n    </tam-splitter-panel>\n    <tam-splitter-panel  [size]=\"30\" [max]=\"50\" [min]=\"20\">\n        Side List Panel\n    </tam-splitter-panel>\n    <tam-splitter-panel [size]=\"50\" [max]=\"70\" [min]=\"20\">\n        Preview Panel\n    </tam-splitter-panel>\n</tam-splitter>\n```\n\nnested demo:\n```\n<tam-splitter splitterBarWidth=3>\n    <tam-splitter-panel [size]=\"20\" [max]=\"30\" [min]=\"10\" (collapsedChange)=\"collapsedChange($event)\">\n        Refined By Panel\n    </tam-splitter-panel>\n    <tam-splitter-panel [size]=\"80\">\n        <tam-splitter splitterBarWidth=3 [direction]=\"'vertical'\">\n            <tam-splitter-panel [size]=\"30\" [max]=\"40\" [min]=\"20\">\n                Side List Panel\n            </tam-splitter-panel>\n\n            <tam-splitter-panel [size]=\"70\" [max]=\"80\" [min]=\"60\">\n                Preview Panel\n            </tam-splitter-panel>\n        </tam-splitter>\n    </tam-splitter-panel>\n</tam-splitter>\n```\n[中文README](https://blog.csdn.net/baidu_35407267/article/details/82527822)\n","slug":"angular-splitter","published":1,"updated":"2018-11-04T02:58:21.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjo8j4rp40000xhs60ttum3yg","content":"<blockquote>\n<p>this is a angular splitter that could drag the responsive layout, and also act like the layout of notes on mac.</p>\n</blockquote>\n<p><img src=\"/images/splitter.gif\" alt=\"drawing\"><br><img src=\"/images/macnotes.gif\" alt=\"drawing\"></p>\n<h2 id=\"Online\"><a href=\"#Online\" class=\"headerlink\" title=\"Online\"></a>Online</h2><p><a href=\"http://angular-splitter.guguji5.top\" target=\"_blank\" rel=\"noopener\">http://angular-splitter.guguji5.top</a></p>\n<h2 id=\"How-to-run\"><a href=\"#How-to-run\" class=\"headerlink\" title=\"How to run\"></a>How to run</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/guguji5/angular-splitter.git</span><br><span class=\"line\">cd angular-splitter</span><br><span class=\"line\">npm install</span><br><span class=\"line\">ng serve --open</span><br></pre></td></tr></table></figure>\n<p>of course you must have angular-cli installed.</p>\n<h2 id=\"Angular-Support\"><a href=\"#Angular-Support\" class=\"headerlink\" title=\"Angular Support\"></a>Angular Support</h2><p>angular 5~6</p>\n<h2 id=\"Document\"><a href=\"#Document\" class=\"headerlink\" title=\"Document\"></a>Document</h2><p><strong>Component <code>&lt;tam-splitter&gt;</code></strong></p>\n<table>\n<thead>\n<tr>\n<th>@Input</th>\n<th>Type</th>\n<th>Default</th>\n<th>Details</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>direction</td>\n<td>string</td>\n<td>“horizontal”</td>\n<td>Select split direction: “horizontal” or “vertical”.</td>\n</tr>\n<tr>\n<td>splitterBarWidth</td>\n<td>number</td>\n<td>8</td>\n<td>Gutters’s size (dragging elements) in pixels.</td>\n</tr>\n<tr>\n<td>useTransition</td>\n<td>boolean or number</td>\n<td>false</td>\n<td>Use transition when collapsing or expanding. when this param is a number, it will be a millisecond value set to the property ‘transition-duration’, should be between 100 and 1000</td>\n</tr>\n<tr>\n<td>type</td>\n<td>string</td>\n<td>‘standard’</td>\n<td>it has two value(standard, macNotes), which controls the behavior of the drag, macNotes type will act like the notes on mac</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>@Output</th>\n<th>Param</th>\n<th>Details</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>sizeChange</td>\n<td>{barNum: number, sizes: Array<code>&lt;number&gt;</code>}</td>\n<td>Emit when draging, return the index of bar and the sizes of panels</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Component <code>&lt;tam-splitter-panel&gt;</code></strong></p>\n<table>\n<thead>\n<tr>\n<th>@Input</th>\n<th>Type</th>\n<th>Default</th>\n<th>Details</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>size</td>\n<td>number</td>\n<td>null</td>\n<td>Size of the panel in percent (value between 0 and 100).all panels sizes should be equal to 100</td>\n</tr>\n<tr>\n<td>max</td>\n<td>number</td>\n<td>null</td>\n<td>Max size of the panel in percent (value between 0 and 100).</td>\n</tr>\n<tr>\n<td>min</td>\n<td>number</td>\n<td>null</td>\n<td>Min size of the panel in percent (value between 0 and 100).</td>\n</tr>\n<tr>\n<td>visible</td>\n<td>boolean</td>\n<td>true</td>\n<td>Allow to toggle panel visibility</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>@Output</th>\n<th>Param</th>\n<th>Details</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>collapsedChange</td>\n<td>{collapsed:boolean, sizes:  Array<code>&lt;number&gt;</code>, collapsedComponentSize: number}</td>\n<td>Emit when collapsed or expand, return the collapsed, the sizes of panels and the size of collapsed panel</td>\n</tr>\n</tbody>\n</table>\n<p>simple demo:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;tam-splitter splitterBarWidth=3 [direction]=&quot;horizontal&quot; (sizeChange)=&quot;sizeChange($event)&quot;&gt;</span><br><span class=\"line\">    &lt;tam-splitter-panel [size]=&quot;20&quot; [max]=&quot;30&quot; [min]=&quot;10&quot;</span><br><span class=\"line\">        [visible]=true (collapsedChange)=&quot;collapsedChange($event)&quot;&gt;</span><br><span class=\"line\">        Refined By Panel</span><br><span class=\"line\">    &lt;/tam-splitter-panel&gt;</span><br><span class=\"line\">    &lt;tam-splitter-panel  [size]=&quot;30&quot; [max]=&quot;50&quot; [min]=&quot;20&quot;&gt;</span><br><span class=\"line\">        Side List Panel</span><br><span class=\"line\">    &lt;/tam-splitter-panel&gt;</span><br><span class=\"line\">    &lt;tam-splitter-panel [size]=&quot;50&quot; [max]=&quot;70&quot; [min]=&quot;20&quot;&gt;</span><br><span class=\"line\">        Preview Panel</span><br><span class=\"line\">    &lt;/tam-splitter-panel&gt;</span><br><span class=\"line\">&lt;/tam-splitter&gt;</span><br></pre></td></tr></table></figure></p>\n<p>nested demo:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;tam-splitter splitterBarWidth=3&gt;</span><br><span class=\"line\">    &lt;tam-splitter-panel [size]=&quot;20&quot; [max]=&quot;30&quot; [min]=&quot;10&quot; (collapsedChange)=&quot;collapsedChange($event)&quot;&gt;</span><br><span class=\"line\">        Refined By Panel</span><br><span class=\"line\">    &lt;/tam-splitter-panel&gt;</span><br><span class=\"line\">    &lt;tam-splitter-panel [size]=&quot;80&quot;&gt;</span><br><span class=\"line\">        &lt;tam-splitter splitterBarWidth=3 [direction]=&quot;&apos;vertical&apos;&quot;&gt;</span><br><span class=\"line\">            &lt;tam-splitter-panel [size]=&quot;30&quot; [max]=&quot;40&quot; [min]=&quot;20&quot;&gt;</span><br><span class=\"line\">                Side List Panel</span><br><span class=\"line\">            &lt;/tam-splitter-panel&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">            &lt;tam-splitter-panel [size]=&quot;70&quot; [max]=&quot;80&quot; [min]=&quot;60&quot;&gt;</span><br><span class=\"line\">                Preview Panel</span><br><span class=\"line\">            &lt;/tam-splitter-panel&gt;</span><br><span class=\"line\">        &lt;/tam-splitter&gt;</span><br><span class=\"line\">    &lt;/tam-splitter-panel&gt;</span><br><span class=\"line\">&lt;/tam-splitter&gt;</span><br></pre></td></tr></table></figure></p>\n<p><a href=\"https://blog.csdn.net/baidu_35407267/article/details/82527822\" target=\"_blank\" rel=\"noopener\">中文README</a></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>this is a angular splitter that could drag the responsive layout, and also act like the layout of notes on mac.</p>\n</blockquote>\n<p><img src=\"/images/splitter.gif\" alt=\"drawing\"><br><img src=\"/images/macnotes.gif\" alt=\"drawing\"></p>\n<h2 id=\"Online\"><a href=\"#Online\" class=\"headerlink\" title=\"Online\"></a>Online</h2><p><a href=\"http://angular-splitter.guguji5.top\" target=\"_blank\" rel=\"noopener\">http://angular-splitter.guguji5.top</a></p>\n<h2 id=\"How-to-run\"><a href=\"#How-to-run\" class=\"headerlink\" title=\"How to run\"></a>How to run</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/guguji5/angular-splitter.git</span><br><span class=\"line\">cd angular-splitter</span><br><span class=\"line\">npm install</span><br><span class=\"line\">ng serve --open</span><br></pre></td></tr></table></figure>\n<p>of course you must have angular-cli installed.</p>\n<h2 id=\"Angular-Support\"><a href=\"#Angular-Support\" class=\"headerlink\" title=\"Angular Support\"></a>Angular Support</h2><p>angular 5~6</p>\n<h2 id=\"Document\"><a href=\"#Document\" class=\"headerlink\" title=\"Document\"></a>Document</h2><p><strong>Component <code>&lt;tam-splitter&gt;</code></strong></p>\n<table>\n<thead>\n<tr>\n<th>@Input</th>\n<th>Type</th>\n<th>Default</th>\n<th>Details</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>direction</td>\n<td>string</td>\n<td>“horizontal”</td>\n<td>Select split direction: “horizontal” or “vertical”.</td>\n</tr>\n<tr>\n<td>splitterBarWidth</td>\n<td>number</td>\n<td>8</td>\n<td>Gutters’s size (dragging elements) in pixels.</td>\n</tr>\n<tr>\n<td>useTransition</td>\n<td>boolean or number</td>\n<td>false</td>\n<td>Use transition when collapsing or expanding. when this param is a number, it will be a millisecond value set to the property ‘transition-duration’, should be between 100 and 1000</td>\n</tr>\n<tr>\n<td>type</td>\n<td>string</td>\n<td>‘standard’</td>\n<td>it has two value(standard, macNotes), which controls the behavior of the drag, macNotes type will act like the notes on mac</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>@Output</th>\n<th>Param</th>\n<th>Details</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>sizeChange</td>\n<td>{barNum: number, sizes: Array<code>&lt;number&gt;</code>}</td>\n<td>Emit when draging, return the index of bar and the sizes of panels</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Component <code>&lt;tam-splitter-panel&gt;</code></strong></p>\n<table>\n<thead>\n<tr>\n<th>@Input</th>\n<th>Type</th>\n<th>Default</th>\n<th>Details</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>size</td>\n<td>number</td>\n<td>null</td>\n<td>Size of the panel in percent (value between 0 and 100).all panels sizes should be equal to 100</td>\n</tr>\n<tr>\n<td>max</td>\n<td>number</td>\n<td>null</td>\n<td>Max size of the panel in percent (value between 0 and 100).</td>\n</tr>\n<tr>\n<td>min</td>\n<td>number</td>\n<td>null</td>\n<td>Min size of the panel in percent (value between 0 and 100).</td>\n</tr>\n<tr>\n<td>visible</td>\n<td>boolean</td>\n<td>true</td>\n<td>Allow to toggle panel visibility</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>@Output</th>\n<th>Param</th>\n<th>Details</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>collapsedChange</td>\n<td>{collapsed:boolean, sizes:  Array<code>&lt;number&gt;</code>, collapsedComponentSize: number}</td>\n<td>Emit when collapsed or expand, return the collapsed, the sizes of panels and the size of collapsed panel</td>\n</tr>\n</tbody>\n</table>\n<p>simple demo:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;tam-splitter splitterBarWidth=3 [direction]=&quot;horizontal&quot; (sizeChange)=&quot;sizeChange($event)&quot;&gt;</span><br><span class=\"line\">    &lt;tam-splitter-panel [size]=&quot;20&quot; [max]=&quot;30&quot; [min]=&quot;10&quot;</span><br><span class=\"line\">        [visible]=true (collapsedChange)=&quot;collapsedChange($event)&quot;&gt;</span><br><span class=\"line\">        Refined By Panel</span><br><span class=\"line\">    &lt;/tam-splitter-panel&gt;</span><br><span class=\"line\">    &lt;tam-splitter-panel  [size]=&quot;30&quot; [max]=&quot;50&quot; [min]=&quot;20&quot;&gt;</span><br><span class=\"line\">        Side List Panel</span><br><span class=\"line\">    &lt;/tam-splitter-panel&gt;</span><br><span class=\"line\">    &lt;tam-splitter-panel [size]=&quot;50&quot; [max]=&quot;70&quot; [min]=&quot;20&quot;&gt;</span><br><span class=\"line\">        Preview Panel</span><br><span class=\"line\">    &lt;/tam-splitter-panel&gt;</span><br><span class=\"line\">&lt;/tam-splitter&gt;</span><br></pre></td></tr></table></figure></p>\n<p>nested demo:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;tam-splitter splitterBarWidth=3&gt;</span><br><span class=\"line\">    &lt;tam-splitter-panel [size]=&quot;20&quot; [max]=&quot;30&quot; [min]=&quot;10&quot; (collapsedChange)=&quot;collapsedChange($event)&quot;&gt;</span><br><span class=\"line\">        Refined By Panel</span><br><span class=\"line\">    &lt;/tam-splitter-panel&gt;</span><br><span class=\"line\">    &lt;tam-splitter-panel [size]=&quot;80&quot;&gt;</span><br><span class=\"line\">        &lt;tam-splitter splitterBarWidth=3 [direction]=&quot;&apos;vertical&apos;&quot;&gt;</span><br><span class=\"line\">            &lt;tam-splitter-panel [size]=&quot;30&quot; [max]=&quot;40&quot; [min]=&quot;20&quot;&gt;</span><br><span class=\"line\">                Side List Panel</span><br><span class=\"line\">            &lt;/tam-splitter-panel&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">            &lt;tam-splitter-panel [size]=&quot;70&quot; [max]=&quot;80&quot; [min]=&quot;60&quot;&gt;</span><br><span class=\"line\">                Preview Panel</span><br><span class=\"line\">            &lt;/tam-splitter-panel&gt;</span><br><span class=\"line\">        &lt;/tam-splitter&gt;</span><br><span class=\"line\">    &lt;/tam-splitter-panel&gt;</span><br><span class=\"line\">&lt;/tam-splitter&gt;</span><br></pre></td></tr></table></figure></p>\n<p><a href=\"https://blog.csdn.net/baidu_35407267/article/details/82527822\" target=\"_blank\" rel=\"noopener\">中文README</a></p>\n"},{"title":"Hexo + Github搭建静态博客(一)","date":"2018-11-06T02:03:21.000Z","_content":"## Hexo + Github搭建静态博客(一)\n\n### 快速介绍\nHexo是一个基于Node.js搭建的静态博客框架，通过Hexo，用户可以\b以博文的方式发布\bMarkdown文档。\b\b结合默认或定制化\b主题模板（很像其他静态博客生成框架，Jekyll或Ghost）博文会被转化和生成为HTML/CSS。Hexo所需的所有组件都是模块化的，\b所以你可以按需安装。\n\n### 提前准备\n\b跟着本博客，你可能需要提前准备：\n\n1. git\n2. Node.js\n3. Github账号\n\n### 第一步 安装和初始化Hexo\n这一步需要安装好Hexo所需的东西，Hexo是有许多软件包组成的，而最必要的一个就是npm，Node.js包管理器。\n\n首先，安装hexo-cli,最重要最核心的Hexo命令。\n```\n$ npm install hexo-cli -g\n```\n其次，我们需要创建一些\b基础文件，很幸运，Hexo为我们提供了一键生成的命令。我们只需要\b切换到准备好的文件夹目录，执行如下命令。\n```\n$ hexo init \n```\n此时，文件夹下可能会出现很多文件和文件夹，如下图所示：\n```shell\nblog/\n├── _config.yml\n├── node_modules\n├── package.json\n├── scaffolds\n├── source\n└── theme\n\n4 directory, 2 files\n```\n\n### 第二步 \b设置Hexo主要的配置文件 _config.yml\n上图的这些文件中，_config.yml是至关重要的，所有的核心配置都存储在这个博客中，如果将来你想调整博客的一些设置，\b\b大概率就是这个文件。\n\n我们将会一步一步的\b\b修改配置，选择你喜欢的编辑器，vi， nano 或者sublime等打开_config.yml，在最上边你会看到如下的内容。\n```\n# Site\ntitle: Hexo\nsubtitle:\ndescription:\nauthor: John Doe\nlanguage:\ntimezone:\n```\n前四行分别是博客的名称，\b二级名称，描述和作者的名称。目前不是所有的Hexo主题都会显示这些信息，所以它大多数当成网站\b基本信息。\n\n后边两行是语言和时区，语言选择两字符ISO 639-1代码。时区默认指的是用户服务器的时区，用“tz database\"格式。你可以根据需要修改他们，下边是一个例子：\n```\n#Site\ntitle: 滴滴云博客 \nsubtitle: 为开发者而生 \ndescription: 滴滴云基于滴滴出行的业务技术和经验积累,采用领先的云计算架构、高规格服务器集群搭建、高性能资源配置机制、精细化运营模式,致力于为开发者提供简单快捷、高效稳定。\nauthor: \bdidicloud \nlanguage: zh-CN \ntimezone: \n```\n最后我们要更改的设置是default_layout:\b 在Writing\b下边，在一个博文没发表之前，它是\b不可见的，我们想存成草稿，所以我们把default_layout\b设置成draft。\n```\n# Writing\nnew_post_name: :title.md # File name of new posts\ndefault_layout: draft\ntitlecase: false # Transform title into titlecase\n```\n### 第三步 \b创建和发表博客\n用如下命令来创建一个博文（草稿）,这里的‘first-page’是博文的名称。\n\n```\n$ hexo new first-post\n```\n然后我们应该会看到这样的显示：\n```\nOutput\nINFO  Created: ~/hexo_blog/source/_drafts/first-post.md\n```\n我们可以选择自己喜欢的编辑器，打开first-post.md\n\n每一个博文都有一个\bfront-matter设置，Front-matter是一个\bJSON or YAML块，它可以用来设置这标题，发布时间，标签等等。Front-matter\b\b一般用`---`或者`;;;`标志结尾。在Front-matter之后，你可以用Markdown语法写自己的博文。\n\n用如下的内容替换\bfirst-post.md的内容。\n```\ntitle: 滴滴云--为开发者而生\ntags:\n  - Test\n  - Blog\ncategories:\n  - Hexo\ncomments: true\ndate: 2018-11-04 00:00:00\n---\n\n## Markdown goes here.\n\n**This is our first post!**\n```\n然后执行`$ hexo publish first-post`会看到如下的结果：\n```\nOutput\nINFO  Published: ~/hexo_blog/source/_posts/first-post.md\n```\n### 第四步 启动服务器\n\b到目前为止，所有的配置文件和博文都已准备完毕，接下来，我们启动服务器。\n```\n$ hexo server\n```\n现在，我们可以访问自己的博客通过`http://localhost:4000`。你会看到自己预设的hello-world博客,\b`ctrl+c`可以停止服务器。\n![draw](https://img-blog.csdn.net/20161023150235594?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n### 第五步 设置部署脚本\n到目前为止，Hexo有许多不同的方法可以部署，本博客是用git来进行存储，上传，托管博客。除此之外，还支持Heroku, Git, Rsync, OpenShift, FTPSync等多种工具。\n\n这里需要一个git仓库来存储Hexo生成的静态HTML文件，为了简单起见，这里我们用Github提供的git仓库。\n\n在Github上创建一个`<username>.Github.io`的仓库，选择“\bPublic”，并且点击“Initialize this repository with a README”\b选择框。然后打开_config.yml。\n```\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type:\n```\n按如下所示，填上\bdeploy选项，你必须\b\b替换`username`为自己的Github账号。\n```\n\ndeploy:\n  type: git\n  repo: https://Github.com/username/username.Github.io.git\n  branch: master\n```\n\b***因为我们选择了git来部署，所以我们需要安装Hexo包来发布静态模板到git仓库。用npm来安装：\n```\n$ npm install hexo-deployer-git --save\n```\n现在你可以部署你的代码到Github仓库了。\n```\n$ hexo generate && hexo deploy\n```\n在Github密码校验框输入密码以后，如下是成功结果。\n```\nhexo HEXO G\nINFO  Start processing\nINFO  Files loaded in 214 ms\nINFO  Generated: archives/2018/index.html\nINFO  Generated: repository/index.html\nINFO  Generated: archives/index.html\nINFO  Generated: about/index.html\nINFO  Generated: archives/2018/11/index.html\nINFO  Generated: index.html\nINFO  Generated: angular-splitter/index.html\nINFO  Generated: 如何使用GZIP来优化你的网站/index.html\nINFO  8 files generated in 231 ms\n➜  hexo HEXO D\nINFO  Deploying: git\nINFO  Clearing .deploy_git folder...\nINFO  Copying files from public folder...\nINFO  Copying files from extend dirs...\n[master 143ec29] Site updated: 2018-11-04 23:14:03\n 8 files changed, 80 deletions(-)\nTo https://Github.com/guguji5/guguji5.Github.io.git\n   c8f0b04..143ec29  HEAD -> master\nBranch master set up to track remote branch master from https://Github.com/guguji5/guguji5.Github.io.git.\nINFO  Deploy done: git\n```\n### 结语\n至此，完成了所有配置和部署，\b快去搭建属于自己的静态博客吧。以下链接为Hexo搭建起来的博客，可以参考。\n1. https://guguji5.Github.io/\n2. https://kouss.com/\n\n*Hexo\b的子页面包括归档、分类，标签使用，github项目的关联，ejs模板的使用将在下一篇《Hexo + Github搭建静态博客(二)》中给大家分享。*\n\n","source":"_posts/Hexo-Github搭建静态博客-一.md","raw":"---\ntitle: Hexo + Github搭建静态博客(一)\ndate: 2018-11-06 10:03:21\ntags:\n---\n## Hexo + Github搭建静态博客(一)\n\n### 快速介绍\nHexo是一个基于Node.js搭建的静态博客框架，通过Hexo，用户可以\b以博文的方式发布\bMarkdown文档。\b\b结合默认或定制化\b主题模板（很像其他静态博客生成框架，Jekyll或Ghost）博文会被转化和生成为HTML/CSS。Hexo所需的所有组件都是模块化的，\b所以你可以按需安装。\n\n### 提前准备\n\b跟着本博客，你可能需要提前准备：\n\n1. git\n2. Node.js\n3. Github账号\n\n### 第一步 安装和初始化Hexo\n这一步需要安装好Hexo所需的东西，Hexo是有许多软件包组成的，而最必要的一个就是npm，Node.js包管理器。\n\n首先，安装hexo-cli,最重要最核心的Hexo命令。\n```\n$ npm install hexo-cli -g\n```\n其次，我们需要创建一些\b基础文件，很幸运，Hexo为我们提供了一键生成的命令。我们只需要\b切换到准备好的文件夹目录，执行如下命令。\n```\n$ hexo init \n```\n此时，文件夹下可能会出现很多文件和文件夹，如下图所示：\n```shell\nblog/\n├── _config.yml\n├── node_modules\n├── package.json\n├── scaffolds\n├── source\n└── theme\n\n4 directory, 2 files\n```\n\n### 第二步 \b设置Hexo主要的配置文件 _config.yml\n上图的这些文件中，_config.yml是至关重要的，所有的核心配置都存储在这个博客中，如果将来你想调整博客的一些设置，\b\b大概率就是这个文件。\n\n我们将会一步一步的\b\b修改配置，选择你喜欢的编辑器，vi， nano 或者sublime等打开_config.yml，在最上边你会看到如下的内容。\n```\n# Site\ntitle: Hexo\nsubtitle:\ndescription:\nauthor: John Doe\nlanguage:\ntimezone:\n```\n前四行分别是博客的名称，\b二级名称，描述和作者的名称。目前不是所有的Hexo主题都会显示这些信息，所以它大多数当成网站\b基本信息。\n\n后边两行是语言和时区，语言选择两字符ISO 639-1代码。时区默认指的是用户服务器的时区，用“tz database\"格式。你可以根据需要修改他们，下边是一个例子：\n```\n#Site\ntitle: 滴滴云博客 \nsubtitle: 为开发者而生 \ndescription: 滴滴云基于滴滴出行的业务技术和经验积累,采用领先的云计算架构、高规格服务器集群搭建、高性能资源配置机制、精细化运营模式,致力于为开发者提供简单快捷、高效稳定。\nauthor: \bdidicloud \nlanguage: zh-CN \ntimezone: \n```\n最后我们要更改的设置是default_layout:\b 在Writing\b下边，在一个博文没发表之前，它是\b不可见的，我们想存成草稿，所以我们把default_layout\b设置成draft。\n```\n# Writing\nnew_post_name: :title.md # File name of new posts\ndefault_layout: draft\ntitlecase: false # Transform title into titlecase\n```\n### 第三步 \b创建和发表博客\n用如下命令来创建一个博文（草稿）,这里的‘first-page’是博文的名称。\n\n```\n$ hexo new first-post\n```\n然后我们应该会看到这样的显示：\n```\nOutput\nINFO  Created: ~/hexo_blog/source/_drafts/first-post.md\n```\n我们可以选择自己喜欢的编辑器，打开first-post.md\n\n每一个博文都有一个\bfront-matter设置，Front-matter是一个\bJSON or YAML块，它可以用来设置这标题，发布时间，标签等等。Front-matter\b\b一般用`---`或者`;;;`标志结尾。在Front-matter之后，你可以用Markdown语法写自己的博文。\n\n用如下的内容替换\bfirst-post.md的内容。\n```\ntitle: 滴滴云--为开发者而生\ntags:\n  - Test\n  - Blog\ncategories:\n  - Hexo\ncomments: true\ndate: 2018-11-04 00:00:00\n---\n\n## Markdown goes here.\n\n**This is our first post!**\n```\n然后执行`$ hexo publish first-post`会看到如下的结果：\n```\nOutput\nINFO  Published: ~/hexo_blog/source/_posts/first-post.md\n```\n### 第四步 启动服务器\n\b到目前为止，所有的配置文件和博文都已准备完毕，接下来，我们启动服务器。\n```\n$ hexo server\n```\n现在，我们可以访问自己的博客通过`http://localhost:4000`。你会看到自己预设的hello-world博客,\b`ctrl+c`可以停止服务器。\n![draw](https://img-blog.csdn.net/20161023150235594?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n### 第五步 设置部署脚本\n到目前为止，Hexo有许多不同的方法可以部署，本博客是用git来进行存储，上传，托管博客。除此之外，还支持Heroku, Git, Rsync, OpenShift, FTPSync等多种工具。\n\n这里需要一个git仓库来存储Hexo生成的静态HTML文件，为了简单起见，这里我们用Github提供的git仓库。\n\n在Github上创建一个`<username>.Github.io`的仓库，选择“\bPublic”，并且点击“Initialize this repository with a README”\b选择框。然后打开_config.yml。\n```\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type:\n```\n按如下所示，填上\bdeploy选项，你必须\b\b替换`username`为自己的Github账号。\n```\n\ndeploy:\n  type: git\n  repo: https://Github.com/username/username.Github.io.git\n  branch: master\n```\n\b***因为我们选择了git来部署，所以我们需要安装Hexo包来发布静态模板到git仓库。用npm来安装：\n```\n$ npm install hexo-deployer-git --save\n```\n现在你可以部署你的代码到Github仓库了。\n```\n$ hexo generate && hexo deploy\n```\n在Github密码校验框输入密码以后，如下是成功结果。\n```\nhexo HEXO G\nINFO  Start processing\nINFO  Files loaded in 214 ms\nINFO  Generated: archives/2018/index.html\nINFO  Generated: repository/index.html\nINFO  Generated: archives/index.html\nINFO  Generated: about/index.html\nINFO  Generated: archives/2018/11/index.html\nINFO  Generated: index.html\nINFO  Generated: angular-splitter/index.html\nINFO  Generated: 如何使用GZIP来优化你的网站/index.html\nINFO  8 files generated in 231 ms\n➜  hexo HEXO D\nINFO  Deploying: git\nINFO  Clearing .deploy_git folder...\nINFO  Copying files from public folder...\nINFO  Copying files from extend dirs...\n[master 143ec29] Site updated: 2018-11-04 23:14:03\n 8 files changed, 80 deletions(-)\nTo https://Github.com/guguji5/guguji5.Github.io.git\n   c8f0b04..143ec29  HEAD -> master\nBranch master set up to track remote branch master from https://Github.com/guguji5/guguji5.Github.io.git.\nINFO  Deploy done: git\n```\n### 结语\n至此，完成了所有配置和部署，\b快去搭建属于自己的静态博客吧。以下链接为Hexo搭建起来的博客，可以参考。\n1. https://guguji5.Github.io/\n2. https://kouss.com/\n\n*Hexo\b的子页面包括归档、分类，标签使用，github项目的关联，ejs模板的使用将在下一篇《Hexo + Github搭建静态博客(二)》中给大家分享。*\n\n","slug":"Hexo-Github搭建静态博客-一","published":1,"updated":"2018-11-06T02:08:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjo8j4rp90002xhs6j35tk2fd","content":"<h2 id=\"Hexo-Github搭建静态博客-一\"><a href=\"#Hexo-Github搭建静态博客-一\" class=\"headerlink\" title=\"Hexo + Github搭建静态博客(一)\"></a>Hexo + Github搭建静态博客(一)</h2><h3 id=\"快速介绍\"><a href=\"#快速介绍\" class=\"headerlink\" title=\"快速介绍\"></a>快速介绍</h3><p>Hexo是一个基于Node.js搭建的静态博客框架，通过Hexo，用户可以\b以博文的方式发布\bMarkdown文档。\b\b结合默认或定制化\b主题模板（很像其他静态博客生成框架，Jekyll或Ghost）博文会被转化和生成为HTML/CSS。Hexo所需的所有组件都是模块化的，\b所以你可以按需安装。</p>\n<h3 id=\"提前准备\"><a href=\"#提前准备\" class=\"headerlink\" title=\"提前准备\"></a>提前准备</h3><p>\b跟着本博客，你可能需要提前准备：</p>\n<ol>\n<li>git</li>\n<li>Node.js</li>\n<li>Github账号</li>\n</ol>\n<h3 id=\"第一步-安装和初始化Hexo\"><a href=\"#第一步-安装和初始化Hexo\" class=\"headerlink\" title=\"第一步 安装和初始化Hexo\"></a>第一步 安装和初始化Hexo</h3><p>这一步需要安装好Hexo所需的东西，Hexo是有许多软件包组成的，而最必要的一个就是npm，Node.js包管理器。</p>\n<p>首先，安装hexo-cli,最重要最核心的Hexo命令。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure></p>\n<p>其次，我们需要创建一些\b基础文件，很幸运，Hexo为我们提供了一键生成的命令。我们只需要\b切换到准备好的文件夹目录，执行如下命令。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init</span><br></pre></td></tr></table></figure></p>\n<p>此时，文件夹下可能会出现很多文件和文件夹，如下图所示：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">blog/</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── node_modules</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">└── theme</span><br><span class=\"line\"></span><br><span class=\"line\">4 directory, 2 files</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"第二步-设置Hexo主要的配置文件-config-yml\"><a href=\"#第二步-设置Hexo主要的配置文件-config-yml\" class=\"headerlink\" title=\"第二步 \b设置Hexo主要的配置文件 _config.yml\"></a>第二步 \b设置Hexo主要的配置文件 _config.yml</h3><p>上图的这些文件中，_config.yml是至关重要的，所有的核心配置都存储在这个博客中，如果将来你想调整博客的一些设置，\b\b大概率就是这个文件。</p>\n<p>我们将会一步一步的\b\b修改配置，选择你喜欢的编辑器，vi， nano 或者sublime等打开_config.yml，在最上边你会看到如下的内容。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Site</span><br><span class=\"line\">title: Hexo</span><br><span class=\"line\">subtitle:</span><br><span class=\"line\">description:</span><br><span class=\"line\">author: John Doe</span><br><span class=\"line\">language:</span><br><span class=\"line\">timezone:</span><br></pre></td></tr></table></figure></p>\n<p>前四行分别是博客的名称，\b二级名称，描述和作者的名称。目前不是所有的Hexo主题都会显示这些信息，所以它大多数当成网站\b基本信息。</p>\n<p>后边两行是语言和时区，语言选择两字符ISO 639-1代码。时区默认指的是用户服务器的时区，用“tz database”格式。你可以根据需要修改他们，下边是一个例子：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#Site</span><br><span class=\"line\">title: 滴滴云博客 </span><br><span class=\"line\">subtitle: 为开发者而生 </span><br><span class=\"line\">description: 滴滴云基于滴滴出行的业务技术和经验积累,采用领先的云计算架构、高规格服务器集群搭建、高性能资源配置机制、精细化运营模式,致力于为开发者提供简单快捷、高效稳定。</span><br><span class=\"line\">author: \bdidicloud </span><br><span class=\"line\">language: zh-CN </span><br><span class=\"line\">timezone:</span><br></pre></td></tr></table></figure></p>\n<p>最后我们要更改的设置是default_layout:\b 在Writing\b下边，在一个博文没发表之前，它是\b不可见的，我们想存成草稿，所以我们把default_layout\b设置成draft。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Writing</span><br><span class=\"line\">new_post_name: :title.md # File name of new posts</span><br><span class=\"line\">default_layout: draft</span><br><span class=\"line\">titlecase: false # Transform title into titlecase</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"第三步-创建和发表博客\"><a href=\"#第三步-创建和发表博客\" class=\"headerlink\" title=\"第三步 \b创建和发表博客\"></a>第三步 \b创建和发表博客</h3><p>用如下命令来创建一个博文（草稿）,这里的‘first-page’是博文的名称。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new first-post</span><br></pre></td></tr></table></figure>\n<p>然后我们应该会看到这样的显示：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Output</span><br><span class=\"line\">INFO  Created: ~/hexo_blog/source/_drafts/first-post.md</span><br></pre></td></tr></table></figure></p>\n<p>我们可以选择自己喜欢的编辑器，打开first-post.md</p>\n<p>每一个博文都有一个\bfront-matter设置，Front-matter是一个\bJSON or YAML块，它可以用来设置这标题，发布时间，标签等等。Front-matter\b\b一般用<code>---</code>或者<code>;;;</code>标志结尾。在Front-matter之后，你可以用Markdown语法写自己的博文。</p>\n<p>用如下的内容替换\bfirst-post.md的内容。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: 滴滴云--为开发者而生</span><br><span class=\"line\">tags:</span><br><span class=\"line\">  - Test</span><br><span class=\"line\">  - Blog</span><br><span class=\"line\">categories:</span><br><span class=\"line\">  - Hexo</span><br><span class=\"line\">comments: true</span><br><span class=\"line\">date: 2018-11-04 00:00:00</span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br><span class=\"line\">## Markdown goes here.</span><br><span class=\"line\"></span><br><span class=\"line\">**This is our first post!**</span><br></pre></td></tr></table></figure></p>\n<p>然后执行<code>$ hexo publish first-post</code>会看到如下的结果：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Output</span><br><span class=\"line\">INFO  Published: ~/hexo_blog/source/_posts/first-post.md</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"第四步-启动服务器\"><a href=\"#第四步-启动服务器\" class=\"headerlink\" title=\"第四步 启动服务器\"></a>第四步 启动服务器</h3><p>\b到目前为止，所有的配置文件和博文都已准备完毕，接下来，我们启动服务器。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure></p>\n<p>现在，我们可以访问自己的博客通过<code>http://localhost:4000</code>。你会看到自己预设的hello-world博客,\b<code>ctrl+c</code>可以停止服务器。<br><img src=\"https://img-blog.csdn.net/20161023150235594?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"draw\"></p>\n<h3 id=\"第五步-设置部署脚本\"><a href=\"#第五步-设置部署脚本\" class=\"headerlink\" title=\"第五步 设置部署脚本\"></a>第五步 设置部署脚本</h3><p>到目前为止，Hexo有许多不同的方法可以部署，本博客是用git来进行存储，上传，托管博客。除此之外，还支持Heroku, Git, Rsync, OpenShift, FTPSync等多种工具。</p>\n<p>这里需要一个git仓库来存储Hexo生成的静态HTML文件，为了简单起见，这里我们用Github提供的git仓库。</p>\n<p>在Github上创建一个<code>&lt;username&gt;.Github.io</code>的仓库，选择“\bPublic”，并且点击“Initialize this repository with a README”\b选择框。然后打开_config.yml。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Deployment</span><br><span class=\"line\">## Docs: https://hexo.io/docs/deployment.html</span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  type:</span><br></pre></td></tr></table></figure></p>\n<p>按如下所示，填上\bdeploy选项，你必须\b\b替换<code>username</code>为自己的Github账号。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://Github.com/username/username.Github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure></p>\n<p>\b***因为我们选择了git来部署，所以我们需要安装Hexo包来发布静态模板到git仓库。用npm来安装：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p>\n<p>现在你可以部署你的代码到Github仓库了。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure></p>\n<p>在Github密码校验框输入密码以后，如下是成功结果。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo HEXO G</span><br><span class=\"line\">INFO  Start processing</span><br><span class=\"line\">INFO  Files loaded in 214 ms</span><br><span class=\"line\">INFO  Generated: archives/2018/index.html</span><br><span class=\"line\">INFO  Generated: repository/index.html</span><br><span class=\"line\">INFO  Generated: archives/index.html</span><br><span class=\"line\">INFO  Generated: about/index.html</span><br><span class=\"line\">INFO  Generated: archives/2018/11/index.html</span><br><span class=\"line\">INFO  Generated: index.html</span><br><span class=\"line\">INFO  Generated: angular-splitter/index.html</span><br><span class=\"line\">INFO  Generated: 如何使用GZIP来优化你的网站/index.html</span><br><span class=\"line\">INFO  8 files generated in 231 ms</span><br><span class=\"line\">➜  hexo HEXO D</span><br><span class=\"line\">INFO  Deploying: git</span><br><span class=\"line\">INFO  Clearing .deploy_git folder...</span><br><span class=\"line\">INFO  Copying files from public folder...</span><br><span class=\"line\">INFO  Copying files from extend dirs...</span><br><span class=\"line\">[master 143ec29] Site updated: 2018-11-04 23:14:03</span><br><span class=\"line\"> 8 files changed, 80 deletions(-)</span><br><span class=\"line\">To https://Github.com/guguji5/guguji5.Github.io.git</span><br><span class=\"line\">   c8f0b04..143ec29  HEAD -&gt; master</span><br><span class=\"line\">Branch master set up to track remote branch master from https://Github.com/guguji5/guguji5.Github.io.git.</span><br><span class=\"line\">INFO  Deploy done: git</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h3><p>至此，完成了所有配置和部署，\b快去搭建属于自己的静态博客吧。以下链接为Hexo搭建起来的博客，可以参考。</p>\n<ol>\n<li><a href=\"https://guguji5.Github.io/\">https://guguji5.Github.io/</a></li>\n<li><a href=\"https://kouss.com/\" target=\"_blank\" rel=\"noopener\">https://kouss.com/</a></li>\n</ol>\n<p><em>Hexo\b的子页面包括归档、分类，标签使用，github项目的关联，ejs模板的使用将在下一篇《Hexo + Github搭建静态博客(二)》中给大家分享。</em></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Hexo-Github搭建静态博客-一\"><a href=\"#Hexo-Github搭建静态博客-一\" class=\"headerlink\" title=\"Hexo + Github搭建静态博客(一)\"></a>Hexo + Github搭建静态博客(一)</h2><h3 id=\"快速介绍\"><a href=\"#快速介绍\" class=\"headerlink\" title=\"快速介绍\"></a>快速介绍</h3><p>Hexo是一个基于Node.js搭建的静态博客框架，通过Hexo，用户可以\b以博文的方式发布\bMarkdown文档。\b\b结合默认或定制化\b主题模板（很像其他静态博客生成框架，Jekyll或Ghost）博文会被转化和生成为HTML/CSS。Hexo所需的所有组件都是模块化的，\b所以你可以按需安装。</p>\n<h3 id=\"提前准备\"><a href=\"#提前准备\" class=\"headerlink\" title=\"提前准备\"></a>提前准备</h3><p>\b跟着本博客，你可能需要提前准备：</p>\n<ol>\n<li>git</li>\n<li>Node.js</li>\n<li>Github账号</li>\n</ol>\n<h3 id=\"第一步-安装和初始化Hexo\"><a href=\"#第一步-安装和初始化Hexo\" class=\"headerlink\" title=\"第一步 安装和初始化Hexo\"></a>第一步 安装和初始化Hexo</h3><p>这一步需要安装好Hexo所需的东西，Hexo是有许多软件包组成的，而最必要的一个就是npm，Node.js包管理器。</p>\n<p>首先，安装hexo-cli,最重要最核心的Hexo命令。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure></p>\n<p>其次，我们需要创建一些\b基础文件，很幸运，Hexo为我们提供了一键生成的命令。我们只需要\b切换到准备好的文件夹目录，执行如下命令。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init</span><br></pre></td></tr></table></figure></p>\n<p>此时，文件夹下可能会出现很多文件和文件夹，如下图所示：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">blog/</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── node_modules</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">└── theme</span><br><span class=\"line\"></span><br><span class=\"line\">4 directory, 2 files</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"第二步-设置Hexo主要的配置文件-config-yml\"><a href=\"#第二步-设置Hexo主要的配置文件-config-yml\" class=\"headerlink\" title=\"第二步 \b设置Hexo主要的配置文件 _config.yml\"></a>第二步 \b设置Hexo主要的配置文件 _config.yml</h3><p>上图的这些文件中，_config.yml是至关重要的，所有的核心配置都存储在这个博客中，如果将来你想调整博客的一些设置，\b\b大概率就是这个文件。</p>\n<p>我们将会一步一步的\b\b修改配置，选择你喜欢的编辑器，vi， nano 或者sublime等打开_config.yml，在最上边你会看到如下的内容。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Site</span><br><span class=\"line\">title: Hexo</span><br><span class=\"line\">subtitle:</span><br><span class=\"line\">description:</span><br><span class=\"line\">author: John Doe</span><br><span class=\"line\">language:</span><br><span class=\"line\">timezone:</span><br></pre></td></tr></table></figure></p>\n<p>前四行分别是博客的名称，\b二级名称，描述和作者的名称。目前不是所有的Hexo主题都会显示这些信息，所以它大多数当成网站\b基本信息。</p>\n<p>后边两行是语言和时区，语言选择两字符ISO 639-1代码。时区默认指的是用户服务器的时区，用“tz database”格式。你可以根据需要修改他们，下边是一个例子：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#Site</span><br><span class=\"line\">title: 滴滴云博客 </span><br><span class=\"line\">subtitle: 为开发者而生 </span><br><span class=\"line\">description: 滴滴云基于滴滴出行的业务技术和经验积累,采用领先的云计算架构、高规格服务器集群搭建、高性能资源配置机制、精细化运营模式,致力于为开发者提供简单快捷、高效稳定。</span><br><span class=\"line\">author: \bdidicloud </span><br><span class=\"line\">language: zh-CN </span><br><span class=\"line\">timezone:</span><br></pre></td></tr></table></figure></p>\n<p>最后我们要更改的设置是default_layout:\b 在Writing\b下边，在一个博文没发表之前，它是\b不可见的，我们想存成草稿，所以我们把default_layout\b设置成draft。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Writing</span><br><span class=\"line\">new_post_name: :title.md # File name of new posts</span><br><span class=\"line\">default_layout: draft</span><br><span class=\"line\">titlecase: false # Transform title into titlecase</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"第三步-创建和发表博客\"><a href=\"#第三步-创建和发表博客\" class=\"headerlink\" title=\"第三步 \b创建和发表博客\"></a>第三步 \b创建和发表博客</h3><p>用如下命令来创建一个博文（草稿）,这里的‘first-page’是博文的名称。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new first-post</span><br></pre></td></tr></table></figure>\n<p>然后我们应该会看到这样的显示：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Output</span><br><span class=\"line\">INFO  Created: ~/hexo_blog/source/_drafts/first-post.md</span><br></pre></td></tr></table></figure></p>\n<p>我们可以选择自己喜欢的编辑器，打开first-post.md</p>\n<p>每一个博文都有一个\bfront-matter设置，Front-matter是一个\bJSON or YAML块，它可以用来设置这标题，发布时间，标签等等。Front-matter\b\b一般用<code>---</code>或者<code>;;;</code>标志结尾。在Front-matter之后，你可以用Markdown语法写自己的博文。</p>\n<p>用如下的内容替换\bfirst-post.md的内容。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: 滴滴云--为开发者而生</span><br><span class=\"line\">tags:</span><br><span class=\"line\">  - Test</span><br><span class=\"line\">  - Blog</span><br><span class=\"line\">categories:</span><br><span class=\"line\">  - Hexo</span><br><span class=\"line\">comments: true</span><br><span class=\"line\">date: 2018-11-04 00:00:00</span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br><span class=\"line\">## Markdown goes here.</span><br><span class=\"line\"></span><br><span class=\"line\">**This is our first post!**</span><br></pre></td></tr></table></figure></p>\n<p>然后执行<code>$ hexo publish first-post</code>会看到如下的结果：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Output</span><br><span class=\"line\">INFO  Published: ~/hexo_blog/source/_posts/first-post.md</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"第四步-启动服务器\"><a href=\"#第四步-启动服务器\" class=\"headerlink\" title=\"第四步 启动服务器\"></a>第四步 启动服务器</h3><p>\b到目前为止，所有的配置文件和博文都已准备完毕，接下来，我们启动服务器。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure></p>\n<p>现在，我们可以访问自己的博客通过<code>http://localhost:4000</code>。你会看到自己预设的hello-world博客,\b<code>ctrl+c</code>可以停止服务器。<br><img src=\"https://img-blog.csdn.net/20161023150235594?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" alt=\"draw\"></p>\n<h3 id=\"第五步-设置部署脚本\"><a href=\"#第五步-设置部署脚本\" class=\"headerlink\" title=\"第五步 设置部署脚本\"></a>第五步 设置部署脚本</h3><p>到目前为止，Hexo有许多不同的方法可以部署，本博客是用git来进行存储，上传，托管博客。除此之外，还支持Heroku, Git, Rsync, OpenShift, FTPSync等多种工具。</p>\n<p>这里需要一个git仓库来存储Hexo生成的静态HTML文件，为了简单起见，这里我们用Github提供的git仓库。</p>\n<p>在Github上创建一个<code>&lt;username&gt;.Github.io</code>的仓库，选择“\bPublic”，并且点击“Initialize this repository with a README”\b选择框。然后打开_config.yml。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Deployment</span><br><span class=\"line\">## Docs: https://hexo.io/docs/deployment.html</span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  type:</span><br></pre></td></tr></table></figure></p>\n<p>按如下所示，填上\bdeploy选项，你必须\b\b替换<code>username</code>为自己的Github账号。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://Github.com/username/username.Github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure></p>\n<p>\b***因为我们选择了git来部署，所以我们需要安装Hexo包来发布静态模板到git仓库。用npm来安装：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p>\n<p>现在你可以部署你的代码到Github仓库了。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure></p>\n<p>在Github密码校验框输入密码以后，如下是成功结果。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo HEXO G</span><br><span class=\"line\">INFO  Start processing</span><br><span class=\"line\">INFO  Files loaded in 214 ms</span><br><span class=\"line\">INFO  Generated: archives/2018/index.html</span><br><span class=\"line\">INFO  Generated: repository/index.html</span><br><span class=\"line\">INFO  Generated: archives/index.html</span><br><span class=\"line\">INFO  Generated: about/index.html</span><br><span class=\"line\">INFO  Generated: archives/2018/11/index.html</span><br><span class=\"line\">INFO  Generated: index.html</span><br><span class=\"line\">INFO  Generated: angular-splitter/index.html</span><br><span class=\"line\">INFO  Generated: 如何使用GZIP来优化你的网站/index.html</span><br><span class=\"line\">INFO  8 files generated in 231 ms</span><br><span class=\"line\">➜  hexo HEXO D</span><br><span class=\"line\">INFO  Deploying: git</span><br><span class=\"line\">INFO  Clearing .deploy_git folder...</span><br><span class=\"line\">INFO  Copying files from public folder...</span><br><span class=\"line\">INFO  Copying files from extend dirs...</span><br><span class=\"line\">[master 143ec29] Site updated: 2018-11-04 23:14:03</span><br><span class=\"line\"> 8 files changed, 80 deletions(-)</span><br><span class=\"line\">To https://Github.com/guguji5/guguji5.Github.io.git</span><br><span class=\"line\">   c8f0b04..143ec29  HEAD -&gt; master</span><br><span class=\"line\">Branch master set up to track remote branch master from https://Github.com/guguji5/guguji5.Github.io.git.</span><br><span class=\"line\">INFO  Deploy done: git</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h3><p>至此，完成了所有配置和部署，\b快去搭建属于自己的静态博客吧。以下链接为Hexo搭建起来的博客，可以参考。</p>\n<ol>\n<li><a href=\"https://guguji5.Github.io/\">https://guguji5.Github.io/</a></li>\n<li><a href=\"https://kouss.com/\" target=\"_blank\" rel=\"noopener\">https://kouss.com/</a></li>\n</ol>\n<p><em>Hexo\b的子页面包括归档、分类，标签使用，github项目的关联，ejs模板的使用将在下一篇《Hexo + Github搭建静态博客(二)》中给大家分享。</em></p>\n"},{"title":"如何使用GZIP来优化你的网站","_content":"如果你想节省带宽提高网站速度，压缩是一种简单有效的方法。当我打算提高JavaScript的传输速率来开启GZIP压缩的时候，我犹豫了因为有旧版本浏览器的存在（IE6）。\n\n然而在二十一世纪，我们大部分的流量来自于现代浏览器，坦白的讲，我们大部分的用户都是很懂技术的。我们不想让任何一个人在访问我们网站的时候卡顿，哪怕是他在用IE4.0和Wdinows95.谷歌和雅虎都开启了gzip压缩。一个现代的浏览器要想不仅要享受到现代网络信息还要享受到现代互联网的速度，就必须开启gzip压缩。以下是如何设置。\n\n## 等等，为什么我们要开启gzip压缩\n在此之前，我有必要解释一下什么编码。当你在互联网上想请求一个文件时,比如http://www.yahoo.com/index.html，你的浏览器会和服务器有一个会话，大概如下如所示。\n![](https://betterexplained.com/wp-content/uploads/compression/HTTP_request.png)\n\n1. 浏览器：嘿，给我来一个 index.html文件\n2. 服务器：好的，让我去找找它是不是在~\n3. 服务器：找到它了，我会返回一个成功的状态码（200 ok），我正在发送文件……\n4. 浏览器：100kb？ 我滴天……等啊……等啊，好的，下载下来了\n\n当然，实际的请求头和协议会更加正规一点。\n\n但是，它生效了，我拿到了index.html文件。\n\n## 那现在问题在哪呢？\n好吧，这系统是正常的，但是太低效了，坦白讲100kb是一大段的文字，HTML是冗余的，每一个<html>,<table>,<div>都有一个几乎相同的闭合标签。虽然通篇文字都有重复，但是只要你砍掉任何的内容，html（以及它的一奶同胞xml）都不会正常显示。\n\n当文件太大的时候有什么好办法呢，就是gzip压缩它。\n\n如果我们传输一个替代原始大文件的zip的压缩文件给浏览器，就会节省带宽和下载时间。当浏览器可以下载zip文件，解压，并且渲染给用户。下载很快，页面加载也很快，用户心情就会very good。这个浏览器--服务器的会话大概是酱紫的：\n![](https://betterexplained.com/wp-content/uploads/compression/HTTP_request_compressed.png)\n1. 浏览器：嘿，给我来一个index.html，如果要有，给我来一个压缩版的可以吗\n2. 服务器：容我找找……好，满足你，如果找到了给你压缩以下，gzip格式的哦\n3. 服务器：yep，找到了，正在压缩，马上传给你。\n4. 浏览器：太棒了，只有10kb，我来解压，并且渲染给用户。\n\n情况很简单：文件越小，下载更快，用户感受更好。\n\n不相信我？雅虎主页的html部分通过压缩从101kb直接压到了15kb：\n![](https://betterexplained.com/wp-content/uploads/compression/yahoo.png)\n\n## 残（淡）酷（定）的现实\n变化的部分在于浏览器和服务器，它成功的发送过去一个压缩文件。对于gzip压缩的要点有两点：\n\n- 浏览器发送一个请求头，告诉服务器接受压缩版本的文件（gzip和deflate是两种压缩算法）Accept-Encoding:gzip,deflate\n- 如果文件压缩了,服务器返回一个头信息:Content-Encoding:gzip\n\n如果服务器没有返回Content-Encoding的头信息，意味着这文件是没压缩的（浏览器可以直接解析的）。请求头Accept-Encoding只是浏览器的一个请求，而不是命令。如果服务器不返回压缩文件，浏览器就不得不处理那庞大的源文件。\n\n## 服务器设置\n“好消息”是我们没办法控制浏览器。他发“Accept-encoding: gzip, deflat”或者不发，请求头就在那里，不增不减。\n\n我们需要做的只是给服务器配置，让它返回压缩版本。如果浏览器控制，我们可以为每一个人节省带宽。\n\n对于IIS服务器，启动压缩在“设置”里。\n\n如果你像我一样用nodejs来搭建服务器，那你中奖了，nodejs开启gzip非常的简单，只需增加两行代码搞定。\n\n\n```\nconst express = require('express');\nconst app = express();\n\n//express框架，前边肯定都是必要的，也就是只需安装compression组件，然后添加一下两句代码就好\nconst compression = require('compression');\napp.use(compression());\n```\n\n\n对于Apache服务器，我们可以启动压缩输出也很简单直接。在你的.htaccess文件里增加如下代码：\n\n```\n# compress text, html, javascript, css, xml:\nAddOutputFilterByType DEFLATE text/plain\nAddOutputFilterByType DEFLATE text/html\nAddOutputFilterByType DEFLATE text/xml\nAddOutputFilterByType DEFLATE text/css\nAddOutputFilterByType DEFLATE application/xml\nAddOutputFilterByType DEFLATE application/xhtml+xml\nAddOutputFilterByType DEFLATE application/rss+xml\nAddOutputFilterByType DEFLATE application/javascript\nAddOutputFilterByType DEFLATE application/x-javascript\n\n# Or, compress certain file types by extension:\n<files *.html>\nSetOutputFilter DEFLATE\n</files>\n```\nApache服务器有两个压缩选择：\n\n- mod_deflate 更简单设置更加标准。\n- mod_gzip 看起来更加强大，可以预预缩文件。\n\nDeflate更快，所以我用的它；当然如果想更爽，用mod_gzip。无论你选那种，Apache会检查浏览器是否发送“Accept-encoding”请求头来判断是返回压缩文件还是源文件。然而，一些旧版本浏览器会带来麻烦，需要一些特别的指令来纠正它。\n\n如果你不能改你的.htaccess 文件，你可以用PHP来返回压缩的内容，给你的HTML文件一个.php 文件，把下边文件加在文件的最上边。\nIN PHP :\n```\n<?php if (substr_count($_SERVER[‘HTTP_ACCEPT_ENCODING’], ‘gzip’)) ob_start(“ob_gzhandler”); else ob_start(); ?>\n```\n我们会检查“Accept-encoding”头，返回gzip压缩版本的文件（不然就返回源文件）。这简直像是在建设你自己的web服务器。如果你确实在搭建服务器，请用Apache来压缩你的文件。你肯定不想下载你的文件 just like bearing。\n\n*这有点给apache打广告的意思啊*\n\n## 验证压缩的效果\n一旦你配置好了你的服务器，检查他是不是生效了。\n- 在线查看：用[online gzip test](http://www.gidnetwork.com/tools/gzip-test.php)来检查你的网页是不是确实压缩了。\n- 浏览器查看：在chrome谷歌浏览器，F12打开 开发者工具--> network页签（火狐和IE浏览器也是相似的）。刷新你的页面，点击这network航信息来查看。这“Content-encoding: gzip” 的头信息意味着内容压缩了传过来的。\n\n![image](https://betterexplained.com/wp-content/uploads/2007/04/chrome-gzip-header.png)\n\n点击“use large rows”表情来查看更多信息。包含了压缩以后的大小和源文件的大小。\n\n![image](https://betterexplained.com/wp-content/uploads/2007/04/request-size.png)\n\n奇迹般的，主页从187kb压缩到了59kb。\n\n## 试试几个小栗子\n我做了个几个页和一个下载demo：\n- [index.html](https://betterexplained.com/examples/compressed/index.html) —— 默认压缩\n- [index.htm](https://betterexplained.com/examples/compressed/index.htm) —— 通过在Apache上的.htaccess文件 增加 *.htm规则来压缩\n- [index.php](https://betterexplained.com/examples/compressed/index.php) —— 通过php的头信息来压缩\n\n随意下载这些文件，放到你的服务器，调整你的服务器设置。\n\n## 警告\ngzip压缩的出现如此的令人振奋，但是还有以下三个注意点：\n- 低版本浏览器：一些浏览器接受压缩文件还是有问题（他们说他们可以但是他们并不行），如果你的站点必须在window95的网景1.0浏览器上，你可能不想要压缩文件。Apache mod_deflate设置了一些忽略规则来专门为旧浏览器。\n- 已经压缩过的文件:大多数的图片，音乐和视频都已经压缩过了，不要浪费时间来压缩他们了。事实上，你可以只压缩那三巨头（HTML,CSS AND JAVARSCRIPT)。\n- CPU负载：在传输过程中压缩文件耗费CPU但是节省带宽（用空间换时间）。通常压缩速率的选择需要权衡利弊。也存在一些预压缩静态文件的方法，但这要求更多的资源。考虑了cpu的耗费，压缩文件也是利大于弊。通过压缩实现更好的用户体验，更短的留白时间，值！\n\n\n---\n\n开启gzip压缩是优化网站最快的方法之一。大胆的用吧，让你的用户体验更棒。\n\n\n*本文为翻译文章，欲了解原文请点击[原文链接](https://betterexplained.com/articles/how-to-optimize-your-site-with-gzip-compression/)*\n","source":"_posts/如何使用GZIP来优化你的网站.md","raw":"---\ntitle: 如何使用GZIP来优化你的网站\n---\n如果你想节省带宽提高网站速度，压缩是一种简单有效的方法。当我打算提高JavaScript的传输速率来开启GZIP压缩的时候，我犹豫了因为有旧版本浏览器的存在（IE6）。\n\n然而在二十一世纪，我们大部分的流量来自于现代浏览器，坦白的讲，我们大部分的用户都是很懂技术的。我们不想让任何一个人在访问我们网站的时候卡顿，哪怕是他在用IE4.0和Wdinows95.谷歌和雅虎都开启了gzip压缩。一个现代的浏览器要想不仅要享受到现代网络信息还要享受到现代互联网的速度，就必须开启gzip压缩。以下是如何设置。\n\n## 等等，为什么我们要开启gzip压缩\n在此之前，我有必要解释一下什么编码。当你在互联网上想请求一个文件时,比如http://www.yahoo.com/index.html，你的浏览器会和服务器有一个会话，大概如下如所示。\n![](https://betterexplained.com/wp-content/uploads/compression/HTTP_request.png)\n\n1. 浏览器：嘿，给我来一个 index.html文件\n2. 服务器：好的，让我去找找它是不是在~\n3. 服务器：找到它了，我会返回一个成功的状态码（200 ok），我正在发送文件……\n4. 浏览器：100kb？ 我滴天……等啊……等啊，好的，下载下来了\n\n当然，实际的请求头和协议会更加正规一点。\n\n但是，它生效了，我拿到了index.html文件。\n\n## 那现在问题在哪呢？\n好吧，这系统是正常的，但是太低效了，坦白讲100kb是一大段的文字，HTML是冗余的，每一个<html>,<table>,<div>都有一个几乎相同的闭合标签。虽然通篇文字都有重复，但是只要你砍掉任何的内容，html（以及它的一奶同胞xml）都不会正常显示。\n\n当文件太大的时候有什么好办法呢，就是gzip压缩它。\n\n如果我们传输一个替代原始大文件的zip的压缩文件给浏览器，就会节省带宽和下载时间。当浏览器可以下载zip文件，解压，并且渲染给用户。下载很快，页面加载也很快，用户心情就会very good。这个浏览器--服务器的会话大概是酱紫的：\n![](https://betterexplained.com/wp-content/uploads/compression/HTTP_request_compressed.png)\n1. 浏览器：嘿，给我来一个index.html，如果要有，给我来一个压缩版的可以吗\n2. 服务器：容我找找……好，满足你，如果找到了给你压缩以下，gzip格式的哦\n3. 服务器：yep，找到了，正在压缩，马上传给你。\n4. 浏览器：太棒了，只有10kb，我来解压，并且渲染给用户。\n\n情况很简单：文件越小，下载更快，用户感受更好。\n\n不相信我？雅虎主页的html部分通过压缩从101kb直接压到了15kb：\n![](https://betterexplained.com/wp-content/uploads/compression/yahoo.png)\n\n## 残（淡）酷（定）的现实\n变化的部分在于浏览器和服务器，它成功的发送过去一个压缩文件。对于gzip压缩的要点有两点：\n\n- 浏览器发送一个请求头，告诉服务器接受压缩版本的文件（gzip和deflate是两种压缩算法）Accept-Encoding:gzip,deflate\n- 如果文件压缩了,服务器返回一个头信息:Content-Encoding:gzip\n\n如果服务器没有返回Content-Encoding的头信息，意味着这文件是没压缩的（浏览器可以直接解析的）。请求头Accept-Encoding只是浏览器的一个请求，而不是命令。如果服务器不返回压缩文件，浏览器就不得不处理那庞大的源文件。\n\n## 服务器设置\n“好消息”是我们没办法控制浏览器。他发“Accept-encoding: gzip, deflat”或者不发，请求头就在那里，不增不减。\n\n我们需要做的只是给服务器配置，让它返回压缩版本。如果浏览器控制，我们可以为每一个人节省带宽。\n\n对于IIS服务器，启动压缩在“设置”里。\n\n如果你像我一样用nodejs来搭建服务器，那你中奖了，nodejs开启gzip非常的简单，只需增加两行代码搞定。\n\n\n```\nconst express = require('express');\nconst app = express();\n\n//express框架，前边肯定都是必要的，也就是只需安装compression组件，然后添加一下两句代码就好\nconst compression = require('compression');\napp.use(compression());\n```\n\n\n对于Apache服务器，我们可以启动压缩输出也很简单直接。在你的.htaccess文件里增加如下代码：\n\n```\n# compress text, html, javascript, css, xml:\nAddOutputFilterByType DEFLATE text/plain\nAddOutputFilterByType DEFLATE text/html\nAddOutputFilterByType DEFLATE text/xml\nAddOutputFilterByType DEFLATE text/css\nAddOutputFilterByType DEFLATE application/xml\nAddOutputFilterByType DEFLATE application/xhtml+xml\nAddOutputFilterByType DEFLATE application/rss+xml\nAddOutputFilterByType DEFLATE application/javascript\nAddOutputFilterByType DEFLATE application/x-javascript\n\n# Or, compress certain file types by extension:\n<files *.html>\nSetOutputFilter DEFLATE\n</files>\n```\nApache服务器有两个压缩选择：\n\n- mod_deflate 更简单设置更加标准。\n- mod_gzip 看起来更加强大，可以预预缩文件。\n\nDeflate更快，所以我用的它；当然如果想更爽，用mod_gzip。无论你选那种，Apache会检查浏览器是否发送“Accept-encoding”请求头来判断是返回压缩文件还是源文件。然而，一些旧版本浏览器会带来麻烦，需要一些特别的指令来纠正它。\n\n如果你不能改你的.htaccess 文件，你可以用PHP来返回压缩的内容，给你的HTML文件一个.php 文件，把下边文件加在文件的最上边。\nIN PHP :\n```\n<?php if (substr_count($_SERVER[‘HTTP_ACCEPT_ENCODING’], ‘gzip’)) ob_start(“ob_gzhandler”); else ob_start(); ?>\n```\n我们会检查“Accept-encoding”头，返回gzip压缩版本的文件（不然就返回源文件）。这简直像是在建设你自己的web服务器。如果你确实在搭建服务器，请用Apache来压缩你的文件。你肯定不想下载你的文件 just like bearing。\n\n*这有点给apache打广告的意思啊*\n\n## 验证压缩的效果\n一旦你配置好了你的服务器，检查他是不是生效了。\n- 在线查看：用[online gzip test](http://www.gidnetwork.com/tools/gzip-test.php)来检查你的网页是不是确实压缩了。\n- 浏览器查看：在chrome谷歌浏览器，F12打开 开发者工具--> network页签（火狐和IE浏览器也是相似的）。刷新你的页面，点击这network航信息来查看。这“Content-encoding: gzip” 的头信息意味着内容压缩了传过来的。\n\n![image](https://betterexplained.com/wp-content/uploads/2007/04/chrome-gzip-header.png)\n\n点击“use large rows”表情来查看更多信息。包含了压缩以后的大小和源文件的大小。\n\n![image](https://betterexplained.com/wp-content/uploads/2007/04/request-size.png)\n\n奇迹般的，主页从187kb压缩到了59kb。\n\n## 试试几个小栗子\n我做了个几个页和一个下载demo：\n- [index.html](https://betterexplained.com/examples/compressed/index.html) —— 默认压缩\n- [index.htm](https://betterexplained.com/examples/compressed/index.htm) —— 通过在Apache上的.htaccess文件 增加 *.htm规则来压缩\n- [index.php](https://betterexplained.com/examples/compressed/index.php) —— 通过php的头信息来压缩\n\n随意下载这些文件，放到你的服务器，调整你的服务器设置。\n\n## 警告\ngzip压缩的出现如此的令人振奋，但是还有以下三个注意点：\n- 低版本浏览器：一些浏览器接受压缩文件还是有问题（他们说他们可以但是他们并不行），如果你的站点必须在window95的网景1.0浏览器上，你可能不想要压缩文件。Apache mod_deflate设置了一些忽略规则来专门为旧浏览器。\n- 已经压缩过的文件:大多数的图片，音乐和视频都已经压缩过了，不要浪费时间来压缩他们了。事实上，你可以只压缩那三巨头（HTML,CSS AND JAVARSCRIPT)。\n- CPU负载：在传输过程中压缩文件耗费CPU但是节省带宽（用空间换时间）。通常压缩速率的选择需要权衡利弊。也存在一些预压缩静态文件的方法，但这要求更多的资源。考虑了cpu的耗费，压缩文件也是利大于弊。通过压缩实现更好的用户体验，更短的留白时间，值！\n\n\n---\n\n开启gzip压缩是优化网站最快的方法之一。大胆的用吧，让你的用户体验更棒。\n\n\n*本文为翻译文章，欲了解原文请点击[原文链接](https://betterexplained.com/articles/how-to-optimize-your-site-with-gzip-compression/)*\n","slug":"如何使用GZIP来优化你的网站","published":1,"date":"2018-11-03T08:54:08.000Z","updated":"2018-11-04T03:07:47.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjo8j4rpb0004xhs629cw0hob","content":"<p>如果你想节省带宽提高网站速度，压缩是一种简单有效的方法。当我打算提高JavaScript的传输速率来开启GZIP压缩的时候，我犹豫了因为有旧版本浏览器的存在（IE6）。</p>\n<p>然而在二十一世纪，我们大部分的流量来自于现代浏览器，坦白的讲，我们大部分的用户都是很懂技术的。我们不想让任何一个人在访问我们网站的时候卡顿，哪怕是他在用IE4.0和Wdinows95.谷歌和雅虎都开启了gzip压缩。一个现代的浏览器要想不仅要享受到现代网络信息还要享受到现代互联网的速度，就必须开启gzip压缩。以下是如何设置。</p>\n<h2 id=\"等等，为什么我们要开启gzip压缩\"><a href=\"#等等，为什么我们要开启gzip压缩\" class=\"headerlink\" title=\"等等，为什么我们要开启gzip压缩\"></a>等等，为什么我们要开启gzip压缩</h2><p>在此之前，我有必要解释一下什么编码。当你在互联网上想请求一个文件时,比如<a href=\"http://www.yahoo.com/index.html，你的浏览器会和服务器有一个会话，大概如下如所示。\" target=\"_blank\" rel=\"noopener\">http://www.yahoo.com/index.html，你的浏览器会和服务器有一个会话，大概如下如所示。</a><br><img src=\"https://betterexplained.com/wp-content/uploads/compression/HTTP_request.png\" alt=\"\"></p>\n<ol>\n<li>浏览器：嘿，给我来一个 index.html文件</li>\n<li>服务器：好的，让我去找找它是不是在~</li>\n<li>服务器：找到它了，我会返回一个成功的状态码（200 ok），我正在发送文件……</li>\n<li>浏览器：100kb？ 我滴天……等啊……等啊，好的，下载下来了</li>\n</ol>\n<p>当然，实际的请求头和协议会更加正规一点。</p>\n<p>但是，它生效了，我拿到了index.html文件。</p>\n<h2 id=\"那现在问题在哪呢？\"><a href=\"#那现在问题在哪呢？\" class=\"headerlink\" title=\"那现在问题在哪呢？\"></a>那现在问题在哪呢？</h2><p>好吧，这系统是正常的，但是太低效了，坦白讲100kb是一大段的文字，HTML是冗余的，每一个<html>,<table>,<div>都有一个几乎相同的闭合标签。虽然通篇文字都有重复，但是只要你砍掉任何的内容，html（以及它的一奶同胞xml）都不会正常显示。</div></table></html></p>\n<p>当文件太大的时候有什么好办法呢，就是gzip压缩它。</p>\n<p>如果我们传输一个替代原始大文件的zip的压缩文件给浏览器，就会节省带宽和下载时间。当浏览器可以下载zip文件，解压，并且渲染给用户。下载很快，页面加载也很快，用户心情就会very good。这个浏览器–服务器的会话大概是酱紫的：<br><img src=\"https://betterexplained.com/wp-content/uploads/compression/HTTP_request_compressed.png\" alt=\"\"></p>\n<ol>\n<li>浏览器：嘿，给我来一个index.html，如果要有，给我来一个压缩版的可以吗</li>\n<li>服务器：容我找找……好，满足你，如果找到了给你压缩以下，gzip格式的哦</li>\n<li>服务器：yep，找到了，正在压缩，马上传给你。</li>\n<li>浏览器：太棒了，只有10kb，我来解压，并且渲染给用户。</li>\n</ol>\n<p>情况很简单：文件越小，下载更快，用户感受更好。</p>\n<p>不相信我？雅虎主页的html部分通过压缩从101kb直接压到了15kb：<br><img src=\"https://betterexplained.com/wp-content/uploads/compression/yahoo.png\" alt=\"\"></p>\n<h2 id=\"残（淡）酷（定）的现实\"><a href=\"#残（淡）酷（定）的现实\" class=\"headerlink\" title=\"残（淡）酷（定）的现实\"></a>残（淡）酷（定）的现实</h2><p>变化的部分在于浏览器和服务器，它成功的发送过去一个压缩文件。对于gzip压缩的要点有两点：</p>\n<ul>\n<li>浏览器发送一个请求头，告诉服务器接受压缩版本的文件（gzip和deflate是两种压缩算法）Accept-Encoding:gzip,deflate</li>\n<li>如果文件压缩了,服务器返回一个头信息:Content-Encoding:gzip</li>\n</ul>\n<p>如果服务器没有返回Content-Encoding的头信息，意味着这文件是没压缩的（浏览器可以直接解析的）。请求头Accept-Encoding只是浏览器的一个请求，而不是命令。如果服务器不返回压缩文件，浏览器就不得不处理那庞大的源文件。</p>\n<h2 id=\"服务器设置\"><a href=\"#服务器设置\" class=\"headerlink\" title=\"服务器设置\"></a>服务器设置</h2><p>“好消息”是我们没办法控制浏览器。他发“Accept-encoding: gzip, deflat”或者不发，请求头就在那里，不增不减。</p>\n<p>我们需要做的只是给服务器配置，让它返回压缩版本。如果浏览器控制，我们可以为每一个人节省带宽。</p>\n<p>对于IIS服务器，启动压缩在“设置”里。</p>\n<p>如果你像我一样用nodejs来搭建服务器，那你中奖了，nodejs开启gzip非常的简单，只需增加两行代码搞定。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const express = require(&apos;express&apos;);</span><br><span class=\"line\">const app = express();</span><br><span class=\"line\"></span><br><span class=\"line\">//express框架，前边肯定都是必要的，也就是只需安装compression组件，然后添加一下两句代码就好</span><br><span class=\"line\">const compression = require(&apos;compression&apos;);</span><br><span class=\"line\">app.use(compression());</span><br></pre></td></tr></table></figure>\n<p>对于Apache服务器，我们可以启动压缩输出也很简单直接。在你的.htaccess文件里增加如下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># compress text, html, javascript, css, xml:</span><br><span class=\"line\">AddOutputFilterByType DEFLATE text/plain</span><br><span class=\"line\">AddOutputFilterByType DEFLATE text/html</span><br><span class=\"line\">AddOutputFilterByType DEFLATE text/xml</span><br><span class=\"line\">AddOutputFilterByType DEFLATE text/css</span><br><span class=\"line\">AddOutputFilterByType DEFLATE application/xml</span><br><span class=\"line\">AddOutputFilterByType DEFLATE application/xhtml+xml</span><br><span class=\"line\">AddOutputFilterByType DEFLATE application/rss+xml</span><br><span class=\"line\">AddOutputFilterByType DEFLATE application/javascript</span><br><span class=\"line\">AddOutputFilterByType DEFLATE application/x-javascript</span><br><span class=\"line\"></span><br><span class=\"line\"># Or, compress certain file types by extension:</span><br><span class=\"line\">&lt;files *.html&gt;</span><br><span class=\"line\">SetOutputFilter DEFLATE</span><br><span class=\"line\">&lt;/files&gt;</span><br></pre></td></tr></table></figure>\n<p>Apache服务器有两个压缩选择：</p>\n<ul>\n<li>mod_deflate 更简单设置更加标准。</li>\n<li>mod_gzip 看起来更加强大，可以预预缩文件。</li>\n</ul>\n<p>Deflate更快，所以我用的它；当然如果想更爽，用mod_gzip。无论你选那种，Apache会检查浏览器是否发送“Accept-encoding”请求头来判断是返回压缩文件还是源文件。然而，一些旧版本浏览器会带来麻烦，需要一些特别的指令来纠正它。</p>\n<p>如果你不能改你的.htaccess 文件，你可以用PHP来返回压缩的内容，给你的HTML文件一个.php 文件，把下边文件加在文件的最上边。<br>IN PHP :<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php if (substr_count($_SERVER[‘HTTP_ACCEPT_ENCODING’], ‘gzip’)) ob_start(“ob_gzhandler”); else ob_start(); ?&gt;</span><br></pre></td></tr></table></figure></p>\n<p>我们会检查“Accept-encoding”头，返回gzip压缩版本的文件（不然就返回源文件）。这简直像是在建设你自己的web服务器。如果你确实在搭建服务器，请用Apache来压缩你的文件。你肯定不想下载你的文件 just like bearing。</p>\n<p><em>这有点给apache打广告的意思啊</em></p>\n<h2 id=\"验证压缩的效果\"><a href=\"#验证压缩的效果\" class=\"headerlink\" title=\"验证压缩的效果\"></a>验证压缩的效果</h2><p>一旦你配置好了你的服务器，检查他是不是生效了。</p>\n<ul>\n<li>在线查看：用<a href=\"http://www.gidnetwork.com/tools/gzip-test.php\" target=\"_blank\" rel=\"noopener\">online gzip test</a>来检查你的网页是不是确实压缩了。</li>\n<li>浏览器查看：在chrome谷歌浏览器，F12打开 开发者工具–&gt; network页签（火狐和IE浏览器也是相似的）。刷新你的页面，点击这network航信息来查看。这“Content-encoding: gzip” 的头信息意味着内容压缩了传过来的。</li>\n</ul>\n<p><img src=\"https://betterexplained.com/wp-content/uploads/2007/04/chrome-gzip-header.png\" alt=\"image\"></p>\n<p>点击“use large rows”表情来查看更多信息。包含了压缩以后的大小和源文件的大小。</p>\n<p><img src=\"https://betterexplained.com/wp-content/uploads/2007/04/request-size.png\" alt=\"image\"></p>\n<p>奇迹般的，主页从187kb压缩到了59kb。</p>\n<h2 id=\"试试几个小栗子\"><a href=\"#试试几个小栗子\" class=\"headerlink\" title=\"试试几个小栗子\"></a>试试几个小栗子</h2><p>我做了个几个页和一个下载demo：</p>\n<ul>\n<li><a href=\"https://betterexplained.com/examples/compressed/index.html\" target=\"_blank\" rel=\"noopener\">index.html</a> —— 默认压缩</li>\n<li><a href=\"https://betterexplained.com/examples/compressed/index.htm\" target=\"_blank\" rel=\"noopener\">index.htm</a> —— 通过在Apache上的.htaccess文件 增加 *.htm规则来压缩</li>\n<li><a href=\"https://betterexplained.com/examples/compressed/index.php\" target=\"_blank\" rel=\"noopener\">index.php</a> —— 通过php的头信息来压缩</li>\n</ul>\n<p>随意下载这些文件，放到你的服务器，调整你的服务器设置。</p>\n<h2 id=\"警告\"><a href=\"#警告\" class=\"headerlink\" title=\"警告\"></a>警告</h2><p>gzip压缩的出现如此的令人振奋，但是还有以下三个注意点：</p>\n<ul>\n<li>低版本浏览器：一些浏览器接受压缩文件还是有问题（他们说他们可以但是他们并不行），如果你的站点必须在window95的网景1.0浏览器上，你可能不想要压缩文件。Apache mod_deflate设置了一些忽略规则来专门为旧浏览器。</li>\n<li>已经压缩过的文件:大多数的图片，音乐和视频都已经压缩过了，不要浪费时间来压缩他们了。事实上，你可以只压缩那三巨头（HTML,CSS AND JAVARSCRIPT)。</li>\n<li>CPU负载：在传输过程中压缩文件耗费CPU但是节省带宽（用空间换时间）。通常压缩速率的选择需要权衡利弊。也存在一些预压缩静态文件的方法，但这要求更多的资源。考虑了cpu的耗费，压缩文件也是利大于弊。通过压缩实现更好的用户体验，更短的留白时间，值！</li>\n</ul>\n<hr>\n<p>开启gzip压缩是优化网站最快的方法之一。大胆的用吧，让你的用户体验更棒。</p>\n<p><em>本文为翻译文章，欲了解原文请点击<a href=\"https://betterexplained.com/articles/how-to-optimize-your-site-with-gzip-compression/\" target=\"_blank\" rel=\"noopener\">原文链接</a></em></p>\n","site":{"data":{}},"excerpt":"","more":"<p>如果你想节省带宽提高网站速度，压缩是一种简单有效的方法。当我打算提高JavaScript的传输速率来开启GZIP压缩的时候，我犹豫了因为有旧版本浏览器的存在（IE6）。</p>\n<p>然而在二十一世纪，我们大部分的流量来自于现代浏览器，坦白的讲，我们大部分的用户都是很懂技术的。我们不想让任何一个人在访问我们网站的时候卡顿，哪怕是他在用IE4.0和Wdinows95.谷歌和雅虎都开启了gzip压缩。一个现代的浏览器要想不仅要享受到现代网络信息还要享受到现代互联网的速度，就必须开启gzip压缩。以下是如何设置。</p>\n<h2 id=\"等等，为什么我们要开启gzip压缩\"><a href=\"#等等，为什么我们要开启gzip压缩\" class=\"headerlink\" title=\"等等，为什么我们要开启gzip压缩\"></a>等等，为什么我们要开启gzip压缩</h2><p>在此之前，我有必要解释一下什么编码。当你在互联网上想请求一个文件时,比如<a href=\"http://www.yahoo.com/index.html，你的浏览器会和服务器有一个会话，大概如下如所示。\" target=\"_blank\" rel=\"noopener\">http://www.yahoo.com/index.html，你的浏览器会和服务器有一个会话，大概如下如所示。</a><br><img src=\"https://betterexplained.com/wp-content/uploads/compression/HTTP_request.png\" alt=\"\"></p>\n<ol>\n<li>浏览器：嘿，给我来一个 index.html文件</li>\n<li>服务器：好的，让我去找找它是不是在~</li>\n<li>服务器：找到它了，我会返回一个成功的状态码（200 ok），我正在发送文件……</li>\n<li>浏览器：100kb？ 我滴天……等啊……等啊，好的，下载下来了</li>\n</ol>\n<p>当然，实际的请求头和协议会更加正规一点。</p>\n<p>但是，它生效了，我拿到了index.html文件。</p>\n<h2 id=\"那现在问题在哪呢？\"><a href=\"#那现在问题在哪呢？\" class=\"headerlink\" title=\"那现在问题在哪呢？\"></a>那现在问题在哪呢？</h2><p>好吧，这系统是正常的，但是太低效了，坦白讲100kb是一大段的文字，HTML是冗余的，每一个<html>,<table>,<div>都有一个几乎相同的闭合标签。虽然通篇文字都有重复，但是只要你砍掉任何的内容，html（以及它的一奶同胞xml）都不会正常显示。</div></table></html></p>\n<p>当文件太大的时候有什么好办法呢，就是gzip压缩它。</p>\n<p>如果我们传输一个替代原始大文件的zip的压缩文件给浏览器，就会节省带宽和下载时间。当浏览器可以下载zip文件，解压，并且渲染给用户。下载很快，页面加载也很快，用户心情就会very good。这个浏览器–服务器的会话大概是酱紫的：<br><img src=\"https://betterexplained.com/wp-content/uploads/compression/HTTP_request_compressed.png\" alt=\"\"></p>\n<ol>\n<li>浏览器：嘿，给我来一个index.html，如果要有，给我来一个压缩版的可以吗</li>\n<li>服务器：容我找找……好，满足你，如果找到了给你压缩以下，gzip格式的哦</li>\n<li>服务器：yep，找到了，正在压缩，马上传给你。</li>\n<li>浏览器：太棒了，只有10kb，我来解压，并且渲染给用户。</li>\n</ol>\n<p>情况很简单：文件越小，下载更快，用户感受更好。</p>\n<p>不相信我？雅虎主页的html部分通过压缩从101kb直接压到了15kb：<br><img src=\"https://betterexplained.com/wp-content/uploads/compression/yahoo.png\" alt=\"\"></p>\n<h2 id=\"残（淡）酷（定）的现实\"><a href=\"#残（淡）酷（定）的现实\" class=\"headerlink\" title=\"残（淡）酷（定）的现实\"></a>残（淡）酷（定）的现实</h2><p>变化的部分在于浏览器和服务器，它成功的发送过去一个压缩文件。对于gzip压缩的要点有两点：</p>\n<ul>\n<li>浏览器发送一个请求头，告诉服务器接受压缩版本的文件（gzip和deflate是两种压缩算法）Accept-Encoding:gzip,deflate</li>\n<li>如果文件压缩了,服务器返回一个头信息:Content-Encoding:gzip</li>\n</ul>\n<p>如果服务器没有返回Content-Encoding的头信息，意味着这文件是没压缩的（浏览器可以直接解析的）。请求头Accept-Encoding只是浏览器的一个请求，而不是命令。如果服务器不返回压缩文件，浏览器就不得不处理那庞大的源文件。</p>\n<h2 id=\"服务器设置\"><a href=\"#服务器设置\" class=\"headerlink\" title=\"服务器设置\"></a>服务器设置</h2><p>“好消息”是我们没办法控制浏览器。他发“Accept-encoding: gzip, deflat”或者不发，请求头就在那里，不增不减。</p>\n<p>我们需要做的只是给服务器配置，让它返回压缩版本。如果浏览器控制，我们可以为每一个人节省带宽。</p>\n<p>对于IIS服务器，启动压缩在“设置”里。</p>\n<p>如果你像我一样用nodejs来搭建服务器，那你中奖了，nodejs开启gzip非常的简单，只需增加两行代码搞定。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const express = require(&apos;express&apos;);</span><br><span class=\"line\">const app = express();</span><br><span class=\"line\"></span><br><span class=\"line\">//express框架，前边肯定都是必要的，也就是只需安装compression组件，然后添加一下两句代码就好</span><br><span class=\"line\">const compression = require(&apos;compression&apos;);</span><br><span class=\"line\">app.use(compression());</span><br></pre></td></tr></table></figure>\n<p>对于Apache服务器，我们可以启动压缩输出也很简单直接。在你的.htaccess文件里增加如下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># compress text, html, javascript, css, xml:</span><br><span class=\"line\">AddOutputFilterByType DEFLATE text/plain</span><br><span class=\"line\">AddOutputFilterByType DEFLATE text/html</span><br><span class=\"line\">AddOutputFilterByType DEFLATE text/xml</span><br><span class=\"line\">AddOutputFilterByType DEFLATE text/css</span><br><span class=\"line\">AddOutputFilterByType DEFLATE application/xml</span><br><span class=\"line\">AddOutputFilterByType DEFLATE application/xhtml+xml</span><br><span class=\"line\">AddOutputFilterByType DEFLATE application/rss+xml</span><br><span class=\"line\">AddOutputFilterByType DEFLATE application/javascript</span><br><span class=\"line\">AddOutputFilterByType DEFLATE application/x-javascript</span><br><span class=\"line\"></span><br><span class=\"line\"># Or, compress certain file types by extension:</span><br><span class=\"line\">&lt;files *.html&gt;</span><br><span class=\"line\">SetOutputFilter DEFLATE</span><br><span class=\"line\">&lt;/files&gt;</span><br></pre></td></tr></table></figure>\n<p>Apache服务器有两个压缩选择：</p>\n<ul>\n<li>mod_deflate 更简单设置更加标准。</li>\n<li>mod_gzip 看起来更加强大，可以预预缩文件。</li>\n</ul>\n<p>Deflate更快，所以我用的它；当然如果想更爽，用mod_gzip。无论你选那种，Apache会检查浏览器是否发送“Accept-encoding”请求头来判断是返回压缩文件还是源文件。然而，一些旧版本浏览器会带来麻烦，需要一些特别的指令来纠正它。</p>\n<p>如果你不能改你的.htaccess 文件，你可以用PHP来返回压缩的内容，给你的HTML文件一个.php 文件，把下边文件加在文件的最上边。<br>IN PHP :<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php if (substr_count($_SERVER[‘HTTP_ACCEPT_ENCODING’], ‘gzip’)) ob_start(“ob_gzhandler”); else ob_start(); ?&gt;</span><br></pre></td></tr></table></figure></p>\n<p>我们会检查“Accept-encoding”头，返回gzip压缩版本的文件（不然就返回源文件）。这简直像是在建设你自己的web服务器。如果你确实在搭建服务器，请用Apache来压缩你的文件。你肯定不想下载你的文件 just like bearing。</p>\n<p><em>这有点给apache打广告的意思啊</em></p>\n<h2 id=\"验证压缩的效果\"><a href=\"#验证压缩的效果\" class=\"headerlink\" title=\"验证压缩的效果\"></a>验证压缩的效果</h2><p>一旦你配置好了你的服务器，检查他是不是生效了。</p>\n<ul>\n<li>在线查看：用<a href=\"http://www.gidnetwork.com/tools/gzip-test.php\" target=\"_blank\" rel=\"noopener\">online gzip test</a>来检查你的网页是不是确实压缩了。</li>\n<li>浏览器查看：在chrome谷歌浏览器，F12打开 开发者工具–&gt; network页签（火狐和IE浏览器也是相似的）。刷新你的页面，点击这network航信息来查看。这“Content-encoding: gzip” 的头信息意味着内容压缩了传过来的。</li>\n</ul>\n<p><img src=\"https://betterexplained.com/wp-content/uploads/2007/04/chrome-gzip-header.png\" alt=\"image\"></p>\n<p>点击“use large rows”表情来查看更多信息。包含了压缩以后的大小和源文件的大小。</p>\n<p><img src=\"https://betterexplained.com/wp-content/uploads/2007/04/request-size.png\" alt=\"image\"></p>\n<p>奇迹般的，主页从187kb压缩到了59kb。</p>\n<h2 id=\"试试几个小栗子\"><a href=\"#试试几个小栗子\" class=\"headerlink\" title=\"试试几个小栗子\"></a>试试几个小栗子</h2><p>我做了个几个页和一个下载demo：</p>\n<ul>\n<li><a href=\"https://betterexplained.com/examples/compressed/index.html\" target=\"_blank\" rel=\"noopener\">index.html</a> —— 默认压缩</li>\n<li><a href=\"https://betterexplained.com/examples/compressed/index.htm\" target=\"_blank\" rel=\"noopener\">index.htm</a> —— 通过在Apache上的.htaccess文件 增加 *.htm规则来压缩</li>\n<li><a href=\"https://betterexplained.com/examples/compressed/index.php\" target=\"_blank\" rel=\"noopener\">index.php</a> —— 通过php的头信息来压缩</li>\n</ul>\n<p>随意下载这些文件，放到你的服务器，调整你的服务器设置。</p>\n<h2 id=\"警告\"><a href=\"#警告\" class=\"headerlink\" title=\"警告\"></a>警告</h2><p>gzip压缩的出现如此的令人振奋，但是还有以下三个注意点：</p>\n<ul>\n<li>低版本浏览器：一些浏览器接受压缩文件还是有问题（他们说他们可以但是他们并不行），如果你的站点必须在window95的网景1.0浏览器上，你可能不想要压缩文件。Apache mod_deflate设置了一些忽略规则来专门为旧浏览器。</li>\n<li>已经压缩过的文件:大多数的图片，音乐和视频都已经压缩过了，不要浪费时间来压缩他们了。事实上，你可以只压缩那三巨头（HTML,CSS AND JAVARSCRIPT)。</li>\n<li>CPU负载：在传输过程中压缩文件耗费CPU但是节省带宽（用空间换时间）。通常压缩速率的选择需要权衡利弊。也存在一些预压缩静态文件的方法，但这要求更多的资源。考虑了cpu的耗费，压缩文件也是利大于弊。通过压缩实现更好的用户体验，更短的留白时间，值！</li>\n</ul>\n<hr>\n<p>开启gzip压缩是优化网站最快的方法之一。大胆的用吧，让你的用户体验更棒。</p>\n<p><em>本文为翻译文章，欲了解原文请点击<a href=\"https://betterexplained.com/articles/how-to-optimize-your-site-with-gzip-compression/\" target=\"_blank\" rel=\"noopener\">原文链接</a></em></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}